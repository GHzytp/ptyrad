/home/fs01/cl2696/workspace/ptyrad
c0001
Mon Sep 23 23:03:05 EDT 2024
params_path = params/demo/tBL_WSe2_reconstruct.yml
Mon Sep 23 23:03:06 2024       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 520.61.05    Driver Version: 520.61.05    CUDA Version: 11.8     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA A100-SXM...  On   | 00000000:81:00.0 Off |                    0 |
| N/A   38C    P0    64W / 500W |      0MiB / 81920MiB |      0%      Default |
|                               |                      |             Disabled |
+-------------------------------+----------------------+----------------------+
|   1  NVIDIA A100-SXM...  On   | 00000000:C1:00.0 Off |                    0 |
| N/A   38C    P0    60W / 500W |      0MiB / 81920MiB |      0%      Default |
|                               |                      |             Disabled |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
PyTorch version:  2.4.1
PyTorch version:  2.4.1
CUDA available:  True
CUDA version:  11.8
CUDA available:  True
CUDA version:  11.8
CUDA device count:  2
CUDA device count:  2
CUDA device:  ['NVIDIA A100-SXM4-80GB', 'NVIDIA A100-SXM4-80GB']
CUDA device:  ['NVIDIA A100-SXM4-80GB', 'NVIDIA A100-SXM4-80GB']
ptyrad version: v0.1.0-beta2.5
ptyrad version: v0.1.0-beta2.5
### Loading params file ###
Success! Loaded .yml file path = params/demo/tBL_WSe2_reconstruct.yml

Derived values given input exp_params:
kv          = 80 kV
wavelength  = 0.0418 Ang
conv_angle  = 24.9 mrad
Npix        = 128 px
dk          = 0.0523 Ang^-1
kMax        = 3.3467 Ang^-1
alpha_max   = 139.7495 mrad
dx          = 0.1494 Ang, Nyquist-limited dmin = 2*dx = 0.2988 Ang
Rayleigh-limited resolution  = 1.0230 Ang (0.61*lambda/alpha for focused probe )
Real space probe extent = 19.1232 Ang
### Loading params file ###
Success! Loaded .yml file path = params/demo/tBL_WSe2_reconstruct.yml
Detected kernel version 4.18.0, which is below the recommended minimum of 5.5.0; this can cause the process to hang. It is recommended to upgrade the kernel to the minimum version or higher.
Accelerator DataLoader split_batches = True

### Initializing Initializer ###

### Initializing cache ###
use_cached_obj   = False
use_cached_probe = False
use_cached_pos   = False

### Initializing exp_params ###
Input values are displayed below:
kv: 80
conv_angle: 24.9
Npix: 128
dx_spec: 0.1494
defocus: 0
c3: 0
z_distance: 1
Nlayer: 12
N_scans: 16384
N_scan_slow: 128
N_scan_fast: 128
scan_step_size: 0.429
scan_flipT: None
scan_affine: None
scan_rand_std: 0.15
omode_max: 1
omode_init_occu: {'occu_type': 'uniform', 'init_occu': None}
pmode_max: 6
pmode_init_pows: [0.02]
probe_permute: None
meas_permute: None
meas_reshape: None
meas_flipT: [1, 0, 0]
meas_crop: None
meas_resample: None
meas_add_source_size: None
meas_add_detector_blur: None
meas_add_poisson_noise: None

Derived values given input exp_params:
kv          = 80 kV
wavelength  = 0.0418 Ang
conv_angle  = 24.9 mrad
Npix        = 128 px
dk          = 0.0523 Ang^-1
kMax        = 3.3467 Ang^-1
alpha_max   = 139.7495 mrad
dx          = 0.1494 Ang, Nyquist-limited dmin = 2*dx = 0.2988 Ang
Rayleigh-limited resolution  = 1.0230 Ang (0.61*lambda/alpha for focused probe )
Real space probe extent = 19.1232 Ang

### Initializing measurements from 'raw' ###
Imported meausrements shape = (16384, 128, 128)
Imported meausrements int. statistics (min, mean, max) = (-30.8785, 1814.7064, 99441.8047)
Flipping measurements with [flipup, fliplr, transpose] = [1, 0, 0]
Minimum value of -30.8785 subtracted due to the positive px value constraint of measurements
Normalizing measurements so the averaged measurement has max intensity at 1
kv          = 80 kV
wavelength  = 0.0418 Ang
conv_angle  = 24.9 mrad
Npix        = 128 px
dk          = 0.0523 Ang^-1
kMax        = 3.3467 Ang^-1
alpha_max   = 139.7447 mrad
dx          = 0.1494 Ang, Nyquist-limited dmin = 2*dx = 0.2988 Ang
Rayleigh-limited resolution  = 1.0229 Ang (0.61*lambda/alpha for focused probe )
Real space probe extent = 19.1232 Ang
Radius of bright field disk             (rbf) = 11.0 px, suggested probe_mask_k radius (rbf*2/Npix) > 0.17
meausrements int. statistics (min, mean, max) = (0.0000, 0.0275, 1.4818)
measurements                      (N, Ky, Kx) = float32, (16384, 128, 128)

### Initializing probe from 'simu' ###
Use exp_params and default values instead for simulation
Start simulating STEM probe
kv          = 80 kV
wavelength  = 0.0418 Ang
conv_angle  = 24.9 mrad
Npix        = 128 px
dk          = 0.0523 Ang^-1
kMax        = 3.3467 Ang^-1
alpha_max   = 139.7447 mrad
dx          = 0.1494 Ang, Nyquist-limited dmin = 2*dx = 0.2988 Ang
Rayleigh-limited resolution  = 1.0229 Ang (0.61*lambda/alpha for focused probe )
Real space probe extent = 19.1232 Ang
Start making mixed-state STEM probe with 6 incoherent probe modes
Relative power of probe modes = [0.9  0.02 0.02 0.02 0.02 0.02]
probe                         (pmode, Ny, Nx) = complex64, (6, 128, 128)
sum(|probe_data|**2) = 450.46, while sum(meas)/len(meas) = 450.46

### Initializing probe pos from 'simu' ###
Simulating probe positions with dx_spec = 0.1494, scan_step_size = 0.429, N_scan_fast = 128, N_scan_slow = 128
Applying Gaussian distributed random displacement with std = 0.15 px to scan positions
crop_pos                                (N,2) = int16, (16384, 2)
crop_pos 1st and last px coords (y,x)         = ([50, 50], [414, 414])
crop_pos extent (Ang)                         = [54.6804 54.6804]
probe_pos_shifts                        (N,2) = float32, (16384, 2)

### Initializing obj from 'simu' ###
obj_shape is not provided, use exp_params, position range, and probe shape for estimated obj_shape (omode, Nz, Ny, Nx)
object                    (omode, Nz, Ny, Nx) = complex64, (1, 12, 592, 592)
object extent                 (Z, Y, X) (Ang) = [12.     88.4448 88.4448]

### Initializing omode_occu from 'uniform' ###
omode_occu                            (omode) = float32, (1,)

### Initializing H (Fresnel propagator) ###
Calculating H with probe_shape = [128 128], z_distance = 1.0000 Ang, lambd = 0.0418 Ang, extent = [19.1232 19.1232] Ang
H                                    (Ky, Kx) = complex64, (128, 128)

### Initializing obj tilts from = 'simu' ###
Initialized obj_tilts with init_tilts = [[0, 0]] (theta_y, theta_x) mrad
obj_tilts                              (N, 2) = float32, (1, 2)

### Checking consistency between input params with the initialized variables ###
Npix, DP measurements, probe, and H shapes are consistent as '128'
N_scans, len(meas), N_scan_slow*N_scan_fast, len(crop_pos), and len(probe_pos_shifts) are consistent as '16384'
obj.shape[0] is consistent with len(omode_occu) as '1'
obj.shape[1] is consistent with Nlayer as '12'
obj_tilts is consistent with either 1 or N_scans
Pass the consistency check of initialized variables, initialization is done!

### Initializing loss function ###

### Initializing constraint function ###

### Done initializing PtyRADSolver ###
d90 = 23.000 px or 3.436 Ang

### Starting the PtyRADSolver in reconstruct mode ###

### PtychoAD optimizable variables ###
obja            : torch.Size([1, 12, 592, 592])   , torch.float32   , device:cuda:0, grad:True , lr:5e-03
objp            : torch.Size([1, 12, 592, 592])   , torch.float32   , device:cuda:0, grad:True , lr:5e-03
obj_tilts       : torch.Size([1, 2])              , torch.float32   , device:cuda:0, grad:False, lr:0e+00
probe           : torch.Size([6, 128, 128, 2])    , torch.float32   , device:cuda:0, grad:True , lr:1e-03
probe_pos_shifts: torch.Size([16384, 2])          , torch.float32   , device:cuda:0, grad:True , lr:5e-03

### Optimizable variables statitsics ###
Total measurement values:    268,435,456                
Total optimizing variables:  8,640,512                
Overdetermined ratio:        31.07

### Model behavior ###
Obj preblur       : False
Tilt propagator   : False
Sub-px probe shift: True
Detector blur     : False

### Creating PyTorch 'Adam' optimizer with configs = {} ###

### Generating indices, batches, and output_path ###
d90 = 23.000 px or 3.436 Ang
Selecting indices with the 'full' mode 
Generated 64 'random' groups of ~256 scan positions in 0.002 sec
len(DataLoader) = num_batches = 64, DataLoader.batch_size = 256
The effective batch size (i.e., how many probe positions are simultaneously used for 1 update of ptychographic parameters) is batch_size * grad_accumulation = 256 * 1 = 256
output_path = 'output/tBL-WSe2//20240923_full_N16384_dp128_flipT100_random256_p6_1obj_12slice_dz1_Adam_plr1e-3_oalr5e-3_oplr5e-3_slr5e-3_ozblur1_opos_sng1.0_spr0.1_altas_benchmark_acc2' is generated!
Successfully copy 'tBL_WSe2_reconstruct.yml' to 'output/tBL-WSe2//20240923_full_N16384_dp128_flipT100_random256_p6_1obj_12slice_dz1_Adam_plr1e-3_oalr5e-3_oplr5e-3_slr5e-3_ozblur1_opos_sng1.0_spr0.1_altas_benchmark_acc2'
len(DataLoader) = num_batches = 64, DataLoader.batch_size = 256

### Start the PtyRAD iterative ptycho reconstruction ###
Iter: 1, obja.requires_grad = True
Iter: 1, objp.requires_grad = True
Iter: 1, obj_tilts.requires_grad = False
Iter: 1, probe.requires_grad = True
Iter: 1, probe_pos_shifts.requires_grad = True
Done batch 1 with 128 indices ([11638, 12678, 4201, 8530, 15853]...) in 0.148 sec
Done batch 13 with 128 indices ([2022, 15402, 11641, 4964, 6120]...) in 0.085 sec
Done batch 26 with 128 indices ([6823, 6771, 11011, 5842, 4220]...) in 0.087 sec
Done batch 38 with 128 indices ([743, 13614, 3098, 5896, 1123]...) in 0.085 sec
Done batch 51 with 128 indices ([13981, 6945, 569, 13306, 8942]...) in 0.086 sec
Done batch 64 with 128 indices ([11553, 5391, 13471, 657, 5386]...) in 0.090 sec
Apply ortho pmode constraint at iter 1, relative pmode power = [0.87  0.031 0.028 0.025 0.024 0.022], probe int sum = 465.1309
Apply fix probe int constraint at iter 1, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 1
Apply z-direction Gaussian blur with std = 1 px on objp at iter 1
Apply hard positivity constraint on objp at iter 1
Iter: 1, Total Loss: 0.3693, loss_single: 0.3680, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0013, loss_simlar: 0.0000, in 9.125 sec

Iter: 2, obja.requires_grad = True
Iter: 2, objp.requires_grad = True
Iter: 2, obj_tilts.requires_grad = False
Iter: 2, probe.requires_grad = True
Iter: 2, probe_pos_shifts.requires_grad = True
Done batch 1 with 128 indices ([1010, 2448, 6032, 6508, 15092]...) in 0.088 sec
Done batch 13 with 128 indices ([4475, 14332, 8905, 10477, 13649]...) in 0.087 sec
Done batch 26 with 128 indices ([9002, 5617, 4857, 16079, 10058]...) in 0.084 sec
Done batch 38 with 128 indices ([3568, 1235, 5184, 12829, 8246]...) in 0.087 sec
Done batch 51 with 128 indices ([334, 14333, 14937, 6052, 16149]...) in 0.089 sec
Done batch 64 with 128 indices ([195, 2577, 1931, 9786, 1297]...) in 0.088 sec
Apply ortho pmode constraint at iter 2, relative pmode power = [0.862 0.035 0.027 0.026 0.025 0.025], probe int sum = 450.8137
Apply fix probe int constraint at iter 2, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 2
Apply z-direction Gaussian blur with std = 1 px on objp at iter 2
Apply hard positivity constraint on objp at iter 2
Iter: 2, Total Loss: 0.3075, loss_single: 0.3066, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0008, loss_simlar: 0.0000, in 5.654 sec

Iter: 3, obja.requires_grad = True
Iter: 3, objp.requires_grad = True
Iter: 3, obj_tilts.requires_grad = False
Iter: 3, probe.requires_grad = True
Iter: 3, probe_pos_shifts.requires_grad = True
Done batch 1 with 128 indices ([13947, 5567, 3316, 10937, 11314]...) in 0.086 sec
Done batch 13 with 128 indices ([10580, 9680, 4609, 14989, 1188]...) in 0.086 sec
Done batch 26 with 128 indices ([1298, 13049, 6996, 4301, 9558]...) in 0.085 sec
Done batch 38 with 128 indices ([15747, 15579, 7456, 1932, 9489]...) in 0.085 sec
Done batch 51 with 128 indices ([16357, 4548, 12517, 13021, 14097]...) in 0.083 sec
Done batch 64 with 128 indices ([1111, 14337, 14341, 2348, 13062]...) in 0.086 sec
Apply ortho pmode constraint at iter 3, relative pmode power = [0.825 0.044 0.037 0.033 0.032 0.029], probe int sum = 464.8820
Apply fix probe int constraint at iter 3, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 3
Apply z-direction Gaussian blur with std = 1 px on objp at iter 3
Apply hard positivity constraint on objp at iter 3
Iter: 3, Total Loss: 0.3060, loss_single: 0.3050, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0009, loss_simlar: 0.0000, in 5.578 sec

Iter: 4, obja.requires_grad = True
Iter: 4, objp.requires_grad = True
Iter: 4, obj_tilts.requires_grad = False
Iter: 4, probe.requires_grad = True
Iter: 4, probe_pos_shifts.requires_grad = True
Done batch 1 with 128 indices ([10178, 11214, 1142, 6221, 5918]...) in 0.088 sec
Done batch 13 with 128 indices ([8742, 3472, 16376, 1873, 2041]...) in 0.087 sec
Done batch 26 with 128 indices ([6591, 8598, 8329, 8739, 14583]...) in 0.084 sec
Done batch 38 with 128 indices ([5158, 13992, 12344, 5381, 5862]...) in 0.085 sec
Done batch 51 with 128 indices ([11674, 9709, 970, 8116, 2133]...) in 0.085 sec
Done batch 64 with 128 indices ([8152, 9574, 7026, 11997, 11516]...) in 0.084 sec
Apply ortho pmode constraint at iter 4, relative pmode power = [0.775 0.059 0.048 0.041 0.04  0.036], probe int sum = 474.9130
Apply fix probe int constraint at iter 4, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 4
Apply z-direction Gaussian blur with std = 1 px on objp at iter 4
Apply hard positivity constraint on objp at iter 4
Iter: 4, Total Loss: 0.2934, loss_single: 0.2924, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0010, loss_simlar: 0.0000, in 10.392 sec

Iter: 5, obja.requires_grad = True
Iter: 5, objp.requires_grad = True
Iter: 5, obj_tilts.requires_grad = False
Iter: 5, probe.requires_grad = True
Iter: 5, probe_pos_shifts.requires_grad = True
Done batch 1 with 128 indices ([11475, 6853, 9518, 1994, 7013]...) in 0.090 sec
Done batch 13 with 128 indices ([2637, 14600, 1784, 10018, 11673]...) in 0.086 sec
Done batch 26 with 128 indices ([10957, 11994, 11961, 2625, 15451]...) in 0.085 sec
Done batch 38 with 128 indices ([2806, 13553, 6183, 4905, 2580]...) in 0.085 sec
Done batch 51 with 128 indices ([8513, 7748, 1504, 10778, 9676]...) in 0.085 sec
Done batch 64 with 128 indices ([8347, 2505, 3478, 4574, 11194]...) in 0.085 sec
Apply ortho pmode constraint at iter 5, relative pmode power = [0.713 0.079 0.062 0.052 0.049 0.045], probe int sum = 486.7654
Apply fix probe int constraint at iter 5, probe int sum = 450.4553
Apply z-direction Gaussian blur with std = 1 px on obja at iter 5
Apply z-direction Gaussian blur with std = 1 px on objp at iter 5
Apply hard positivity constraint on objp at iter 5
Iter: 5, Total Loss: 0.2796, loss_single: 0.2785, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0011, loss_simlar: 0.0000, in 5.517 sec

Saving summary figures for iter 5
Iter: 6, obja.requires_grad = True
Iter: 6, objp.requires_grad = True
Iter: 6, obj_tilts.requires_grad = False
Iter: 6, probe.requires_grad = True
Iter: 6, probe_pos_shifts.requires_grad = True
Done batch 1 with 128 indices ([10602, 1219, 16151, 6322, 2429]...) in 0.093 sec
Done batch 13 with 128 indices ([7548, 5187, 1551, 10363, 3434]...) in 0.085 sec
Done batch 26 with 128 indices ([6913, 4594, 5688, 666, 5503]...) in 0.085 sec
Done batch 38 with 128 indices ([3409, 10316, 2954, 7531, 6418]...) in 0.085 sec
Done batch 51 with 128 indices ([5193, 1558, 9989, 15836, 9830]...) in 0.085 sec
Done batch 64 with 128 indices ([8419, 274, 778, 8693, 12615]...) in 0.085 sec
Apply ortho pmode constraint at iter 6, relative pmode power = [0.651 0.098 0.075 0.064 0.059 0.053], probe int sum = 493.5945
Apply fix probe int constraint at iter 6, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 6
Apply z-direction Gaussian blur with std = 1 px on objp at iter 6
Apply hard positivity constraint on objp at iter 6
Iter: 6, Total Loss: 0.2686, loss_single: 0.2676, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0011, loss_simlar: 0.0000, in 5.542 sec

Iter: 7, obja.requires_grad = True
Iter: 7, objp.requires_grad = True
Iter: 7, obj_tilts.requires_grad = False
Iter: 7, probe.requires_grad = True
Iter: 7, probe_pos_shifts.requires_grad = True
Done batch 1 with 128 indices ([3924, 5933, 9305, 8283, 2159]...) in 0.085 sec
Done batch 13 with 128 indices ([8203, 10383, 9442, 4400, 12167]...) in 0.084 sec
Done batch 26 with 128 indices ([9462, 1121, 14411, 10698, 16343]...) in 0.084 sec
Done batch 38 with 128 indices ([7533, 9213, 8142, 124, 5633]...) in 0.087 sec
Done batch 51 with 128 indices ([8614, 1943, 5328, 498, 13873]...) in 0.085 sec
Done batch 64 with 128 indices ([11077, 2758, 7386, 10456, 2603]...) in 0.085 sec
Apply ortho pmode constraint at iter 7, relative pmode power = [0.604 0.115 0.082 0.074 0.066 0.06 ], probe int sum = 488.5303
Apply fix probe int constraint at iter 7, probe int sum = 450.4553
Apply z-direction Gaussian blur with std = 1 px on obja at iter 7
Apply z-direction Gaussian blur with std = 1 px on objp at iter 7
Apply hard positivity constraint on objp at iter 7
Iter: 7, Total Loss: 0.2590, loss_single: 0.2580, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0010, loss_simlar: 0.0000, in 10.513 sec

Iter: 8, obja.requires_grad = True
Iter: 8, objp.requires_grad = True
Iter: 8, obj_tilts.requires_grad = False
Iter: 8, probe.requires_grad = True
Iter: 8, probe_pos_shifts.requires_grad = True
Done batch 1 with 128 indices ([11092, 6609, 7589, 8097, 12681]...) in 0.084 sec
Done batch 13 with 128 indices ([8700, 8686, 14266, 3922, 2349]...) in 0.085 sec
Done batch 26 with 128 indices ([9846, 3892, 7056, 15718, 5549]...) in 0.085 sec
Done batch 38 with 128 indices ([8030, 5085, 4927, 4569, 7447]...) in 0.085 sec
Done batch 51 with 128 indices ([4337, 5282, 15231, 7161, 3089]...) in 0.085 sec
Done batch 64 with 128 indices ([6993, 9902, 13700, 12850, 77]...) in 0.086 sec
Apply ortho pmode constraint at iter 8, relative pmode power = [0.573 0.129 0.086 0.08  0.068 0.064], probe int sum = 479.0291
Apply fix probe int constraint at iter 8, probe int sum = 450.4553
Apply z-direction Gaussian blur with std = 1 px on obja at iter 8
Apply z-direction Gaussian blur with std = 1 px on objp at iter 8
Apply hard positivity constraint on objp at iter 8
Iter: 8, Total Loss: 0.2517, loss_single: 0.2507, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0010, loss_simlar: 0.0000, in 5.513 sec

Iter: 9, obja.requires_grad = True
Iter: 9, objp.requires_grad = True
Iter: 9, obj_tilts.requires_grad = False
Iter: 9, probe.requires_grad = True
Iter: 9, probe_pos_shifts.requires_grad = True
Done batch 1 with 128 indices ([9506, 16354, 483, 8540, 4261]...) in 0.086 sec
Done batch 13 with 128 indices ([8395, 9369, 2665, 5506, 15295]...) in 0.084 sec
Done batch 26 with 128 indices ([2389, 2356, 1341, 9518, 9621]...) in 0.087 sec
Done batch 38 with 128 indices ([12390, 9858, 705, 14836, 11176]...) in 0.084 sec
Done batch 51 with 128 indices ([9098, 11541, 4646, 14438, 13186]...) in 0.085 sec
Done batch 64 with 128 indices ([2552, 12009, 4372, 3050, 13223]...) in 0.085 sec
Apply ortho pmode constraint at iter 9, relative pmode power = [0.553 0.142 0.088 0.082 0.068 0.066], probe int sum = 470.4894
Apply fix probe int constraint at iter 9, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 9
Apply z-direction Gaussian blur with std = 1 px on objp at iter 9
Apply hard positivity constraint on objp at iter 9
Iter: 9, Total Loss: 0.2467, loss_single: 0.2456, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0010, loss_simlar: 0.0000, in 9.836 sec

Iter: 10, obja.requires_grad = True
Iter: 10, objp.requires_grad = True
Iter: 10, obj_tilts.requires_grad = False
Iter: 10, probe.requires_grad = True
Iter: 10, probe_pos_shifts.requires_grad = True
Done batch 1 with 128 indices ([14201, 2879, 3845, 11557, 4676]...) in 0.086 sec
Done batch 13 with 128 indices ([6185, 12404, 13037, 11335, 10608]...) in 0.086 sec
Done batch 26 with 128 indices ([3284, 4166, 5403, 7809, 232]...) in 0.087 sec
Done batch 38 with 128 indices ([8266, 2569, 4339, 14592, 12522]...) in 0.083 sec
Done batch 51 with 128 indices ([5986, 14595, 7697, 644, 587]...) in 0.085 sec
Done batch 64 with 128 indices ([7876, 12456, 7582, 14539, 7862]...) in 0.085 sec
Apply ortho pmode constraint at iter 10, relative pmode power = [0.539 0.153 0.091 0.083 0.072 0.063], probe int sum = 466.9389
Apply fix probe int constraint at iter 10, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 10
Apply z-direction Gaussian blur with std = 1 px on objp at iter 10
Apply hard positivity constraint on objp at iter 10
Iter: 10, Total Loss: 0.2434, loss_single: 0.2423, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0011, loss_simlar: 0.0000, in 5.555 sec

Saving summary figures for iter 10

### The PtyRADSolver is finished in 95.274 sec, or 1 min 35.274 sec ###
Mon Sep 23 23:05:07 EDT 2024
