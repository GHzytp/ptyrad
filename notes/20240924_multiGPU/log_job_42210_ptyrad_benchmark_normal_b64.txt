/home/fs01/cl2696/workspace/ptyrad
c0001
Mon Sep 23 23:21:48 EDT 2024
params_path = params/demo/tBL_WSe2_reconstruct.yml
Mon Sep 23 23:21:48 2024       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 520.61.05    Driver Version: 520.61.05    CUDA Version: 11.8     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA A100-SXM...  On   | 00000000:C1:00.0 Off |                    0 |
| N/A   33C    P0    59W / 500W |      0MiB / 81920MiB |      0%      Default |
|                               |                      |             Disabled |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
PyTorch version:  2.4.1
CUDA available:  True
CUDA version:  11.8
CUDA device count:  1
CUDA device:  ['NVIDIA A100-SXM4-80GB']
ptyrad version: v0.1.0-beta2.5
### Loading params file ###
Success! Loaded .yml file path = params/demo/tBL_WSe2_reconstruct.yml
Detected kernel version 4.18.0, which is below the recommended minimum of 5.5.0; this can cause the process to hang. It is recommended to upgrade the kernel to the minimum version or higher.
Accelerator DataLoader split_batches = True

### Initializing Initializer ###

### Initializing cache ###
use_cached_obj   = False
use_cached_probe = False
use_cached_pos   = False

### Initializing exp_params ###
Input values are displayed below:
kv: 80
conv_angle: 24.9
Npix: 128
dx_spec: 0.1494
defocus: 0
c3: 0
z_distance: 1
Nlayer: 12
N_scans: 16384
N_scan_slow: 128
N_scan_fast: 128
scan_step_size: 0.429
scan_flipT: None
scan_affine: None
scan_rand_std: 0.15
omode_max: 1
omode_init_occu: {'occu_type': 'uniform', 'init_occu': None}
pmode_max: 6
pmode_init_pows: [0.02]
probe_permute: None
meas_permute: None
meas_reshape: None
meas_flipT: [1, 0, 0]
meas_crop: None
meas_resample: None
meas_add_source_size: None
meas_add_detector_blur: None
meas_add_poisson_noise: None

Derived values given input exp_params:
kv          = 80 kV
wavelength  = 0.0418 Ang
conv_angle  = 24.9 mrad
Npix        = 128 px
dk          = 0.0523 Ang^-1
kMax        = 3.3467 Ang^-1
alpha_max   = 139.7495 mrad
dx          = 0.1494 Ang, Nyquist-limited dmin = 2*dx = 0.2988 Ang
Rayleigh-limited resolution  = 1.0230 Ang (0.61*lambda/alpha for focused probe )
Real space probe extent = 19.1232 Ang

### Initializing measurements from 'raw' ###
Imported meausrements shape = (16384, 128, 128)
Imported meausrements int. statistics (min, mean, max) = (-30.8785, 1814.7064, 99441.8047)
Flipping measurements with [flipup, fliplr, transpose] = [1, 0, 0]
Minimum value of -30.8785 subtracted due to the positive px value constraint of measurements
Normalizing measurements so the averaged measurement has max intensity at 1
Radius of bright field disk             (rbf) = 11.0 px, suggested probe_mask_k radius (rbf*2/Npix) > 0.17
meausrements int. statistics (min, mean, max) = (0.0000, 0.0275, 1.4818)
measurements                      (N, Ky, Kx) = float32, (16384, 128, 128)

### Initializing probe from 'simu' ###
Use exp_params and default values instead for simulation
Start simulating STEM probe
kv          = 80 kV
wavelength  = 0.0418 Ang
conv_angle  = 24.9 mrad
Npix        = 128 px
dk          = 0.0523 Ang^-1
kMax        = 3.3467 Ang^-1
alpha_max   = 139.7447 mrad
dx          = 0.1494 Ang, Nyquist-limited dmin = 2*dx = 0.2988 Ang
Rayleigh-limited resolution  = 1.0229 Ang (0.61*lambda/alpha for focused probe )
Real space probe extent = 19.1232 Ang
Start making mixed-state STEM probe with 6 incoherent probe modes
Relative power of probe modes = [0.9  0.02 0.02 0.02 0.02 0.02]
probe                         (pmode, Ny, Nx) = complex64, (6, 128, 128)
sum(|probe_data|**2) = 450.46, while sum(meas)/len(meas) = 450.46

### Initializing probe pos from 'simu' ###
Simulating probe positions with dx_spec = 0.1494, scan_step_size = 0.429, N_scan_fast = 128, N_scan_slow = 128
Applying Gaussian distributed random displacement with std = 0.15 px to scan positions
crop_pos                                (N,2) = int16, (16384, 2)
crop_pos 1st and last px coords (y,x)         = ([50, 50], [414, 414])
crop_pos extent (Ang)                         = [54.6804 54.6804]
probe_pos_shifts                        (N,2) = float32, (16384, 2)

### Initializing obj from 'simu' ###
obj_shape is not provided, use exp_params, position range, and probe shape for estimated obj_shape (omode, Nz, Ny, Nx)
object                    (omode, Nz, Ny, Nx) = complex64, (1, 12, 592, 592)
object extent                 (Z, Y, X) (Ang) = [12.     88.4448 88.4448]

### Initializing omode_occu from 'uniform' ###
omode_occu                            (omode) = float32, (1,)

### Initializing H (Fresnel propagator) ###
Calculating H with probe_shape = [128 128], z_distance = 1.0000 Ang, lambd = 0.0418 Ang, extent = [19.1232 19.1232] Ang
H                                    (Ky, Kx) = complex64, (128, 128)

### Initializing obj tilts from = 'simu' ###
Initialized obj_tilts with init_tilts = [[0, 0]] (theta_y, theta_x) mrad
obj_tilts                              (N, 2) = float32, (1, 2)

### Checking consistency between input params with the initialized variables ###
Npix, DP measurements, probe, and H shapes are consistent as '128'
N_scans, len(meas), N_scan_slow*N_scan_fast, len(crop_pos), and len(probe_pos_shifts) are consistent as '16384'
obj.shape[0] is consistent with len(omode_occu) as '1'
obj.shape[1] is consistent with Nlayer as '12'
obj_tilts is consistent with either 1 or N_scans
Pass the consistency check of initialized variables, initialization is done!

### Initializing loss function ###

### Initializing constraint function ###

### Done initializing PtyRADSolver ###

### Starting the PtyRADSolver in reconstruct mode ###

### PtychoAD optimizable variables ###
obja            : torch.Size([1, 12, 592, 592])   , torch.float32   , device:cuda:0, grad:True , lr:5e-03
objp            : torch.Size([1, 12, 592, 592])   , torch.float32   , device:cuda:0, grad:True , lr:5e-03
obj_tilts       : torch.Size([1, 2])              , torch.float32   , device:cuda:0, grad:False, lr:0e+00
probe           : torch.Size([6, 128, 128, 2])    , torch.float32   , device:cuda:0, grad:True , lr:1e-03
probe_pos_shifts: torch.Size([16384, 2])          , torch.float32   , device:cuda:0, grad:True , lr:5e-03

### Optimizable variables statitsics ###
Total measurement values:    268,435,456                
Total optimizing variables:  8,640,512                
Overdetermined ratio:        31.07

### Model behavior ###
Obj preblur       : False
Tilt propagator   : False
Sub-px probe shift: True
Detector blur     : False

### Creating PyTorch 'Adam' optimizer with configs = {} ###

### Generating indices, batches, and output_path ###
d90 = 23.000 px or 3.436 Ang
Selecting indices with the 'full' mode 
Generated 256 'random' groups of ~64 scan positions in 0.001 sec
The effective batch size (i.e., how many probe positions are simultaneously used for 1 update of ptychographic parameters) is batch_size * grad_accumulation = 64 * 1 = 64
output_path = 'output/tBL-WSe2//20240923_full_N16384_dp128_flipT100_random64_p6_1obj_12slice_dz1_Adam_plr1e-3_oalr5e-3_oplr5e-3_slr5e-3_ozblur1_opos_sng1.0_spr0.1_altas_benchmark_normal' is generated!
Successfully copy 'tBL_WSe2_reconstruct.yml' to 'output/tBL-WSe2//20240923_full_N16384_dp128_flipT100_random64_p6_1obj_12slice_dz1_Adam_plr1e-3_oalr5e-3_oplr5e-3_slr5e-3_ozblur1_opos_sng1.0_spr0.1_altas_benchmark_normal'
len(DataLoader) = num_batches = 256, DataLoader.batch_size = 64

### Start the PtyRAD iterative ptycho reconstruction ###
Iter: 1, obja.requires_grad = True
Iter: 1, objp.requires_grad = True
Iter: 1, obj_tilts.requires_grad = False
Iter: 1, probe.requires_grad = True
Iter: 1, probe_pos_shifts.requires_grad = True
Done batch 1 with 64 indices ([7851, 9611, 1091, 1936, 1855]...) in 0.059 sec
Done batch 52 with 64 indices ([176, 8720, 16248, 15216, 10819]...) in 0.036 sec
Done batch 103 with 64 indices ([11742, 15071, 8037, 9184, 3630]...) in 0.037 sec
Done batch 154 with 64 indices ([13842, 5807, 14899, 10106, 5588]...) in 0.036 sec
Done batch 205 with 64 indices ([7859, 1894, 8924, 14124, 12227]...) in 0.036 sec
Done batch 256 with 64 indices ([9368, 505, 7650, 1895, 2622]...) in 0.036 sec
Apply ortho pmode constraint at iter 1, relative pmode power = [0.63  0.085 0.078 0.074 0.073 0.059], probe int sum = 563.0575
Apply fix probe int constraint at iter 1, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 1
Apply z-direction Gaussian blur with std = 1 px on objp at iter 1
Apply hard positivity constraint on objp at iter 1
Iter: 1, Total Loss: 0.4075, loss_single: 0.4058, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0017, loss_simlar: 0.0000, in 11.469 sec

Iter: 2, obja.requires_grad = True
Iter: 2, objp.requires_grad = True
Iter: 2, obj_tilts.requires_grad = False
Iter: 2, probe.requires_grad = True
Iter: 2, probe_pos_shifts.requires_grad = True
Done batch 1 with 64 indices ([29, 13519, 7612, 9102, 384]...) in 0.038 sec
Done batch 52 with 64 indices ([7712, 15674, 6444, 10069, 14302]...) in 0.037 sec
Done batch 103 with 64 indices ([339, 16242, 13367, 15354, 8484]...) in 0.036 sec
Done batch 154 with 64 indices ([10123, 12981, 4313, 15561, 10580]...) in 0.037 sec
Done batch 205 with 64 indices ([9890, 13270, 3505, 13872, 15440]...) in 0.036 sec
Done batch 256 with 64 indices ([445, 2391, 11024, 7713, 1416]...) in 0.036 sec
Apply ortho pmode constraint at iter 2, relative pmode power = [0.441 0.127 0.121 0.116 0.104 0.091], probe int sum = 640.9273
Apply fix probe int constraint at iter 2, probe int sum = 450.4553
Apply z-direction Gaussian blur with std = 1 px on obja at iter 2
Apply z-direction Gaussian blur with std = 1 px on objp at iter 2
Apply hard positivity constraint on objp at iter 2
Iter: 2, Total Loss: 0.2845, loss_single: 0.2832, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0013, loss_simlar: 0.0000, in 9.682 sec

Iter: 3, obja.requires_grad = True
Iter: 3, objp.requires_grad = True
Iter: 3, obj_tilts.requires_grad = False
Iter: 3, probe.requires_grad = True
Iter: 3, probe_pos_shifts.requires_grad = True
Done batch 1 with 64 indices ([8416, 8988, 6211, 10148, 10938]...) in 0.037 sec
Done batch 52 with 64 indices ([6150, 10971, 7256, 4040, 14565]...) in 0.036 sec
Done batch 103 with 64 indices ([577, 2784, 9640, 14597, 6931]...) in 0.036 sec
Done batch 154 with 64 indices ([8782, 10193, 2033, 7722, 8305]...) in 0.038 sec
Done batch 205 with 64 indices ([7605, 12199, 13781, 11827, 7305]...) in 0.043 sec
Done batch 256 with 64 indices ([4398, 416, 9192, 7216, 14973]...) in 0.036 sec
Apply ortho pmode constraint at iter 3, relative pmode power = [0.39  0.133 0.133 0.122 0.121 0.101], probe int sum = 557.7653
Apply fix probe int constraint at iter 3, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 3
Apply z-direction Gaussian blur with std = 1 px on objp at iter 3
Apply hard positivity constraint on objp at iter 3
Iter: 3, Total Loss: 0.2599, loss_single: 0.2587, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0012, loss_simlar: 0.0000, in 9.622 sec

Iter: 4, obja.requires_grad = True
Iter: 4, objp.requires_grad = True
Iter: 4, obj_tilts.requires_grad = False
Iter: 4, probe.requires_grad = True
Iter: 4, probe_pos_shifts.requires_grad = True
Done batch 1 with 64 indices ([10587, 12272, 3693, 9267, 5534]...) in 0.036 sec
Done batch 52 with 64 indices ([241, 4781, 4309, 4120, 7491]...) in 0.037 sec
Done batch 103 with 64 indices ([12556, 14046, 2018, 15598, 2003]...) in 0.036 sec
Done batch 154 with 64 indices ([7834, 5320, 2955, 5630, 12700]...) in 0.036 sec
Done batch 205 with 64 indices ([3344, 1884, 8421, 10805, 5869]...) in 0.037 sec
Done batch 256 with 64 indices ([14748, 12703, 6906, 2425, 7111]...) in 0.036 sec
Apply ortho pmode constraint at iter 4, relative pmode power = [0.343 0.159 0.145 0.131 0.119 0.103], probe int sum = 561.1184
Apply fix probe int constraint at iter 4, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 4
Apply z-direction Gaussian blur with std = 1 px on objp at iter 4
Apply hard positivity constraint on objp at iter 4
Iter: 4, Total Loss: 0.2508, loss_single: 0.2496, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0012, loss_simlar: 0.0000, in 9.680 sec

Iter: 5, obja.requires_grad = True
Iter: 5, objp.requires_grad = True
Iter: 5, obj_tilts.requires_grad = False
Iter: 5, probe.requires_grad = True
Iter: 5, probe_pos_shifts.requires_grad = True
Done batch 1 with 64 indices ([14063, 14682, 8382, 9798, 14643]...) in 0.037 sec
Done batch 52 with 64 indices ([11771, 14932, 15035, 482, 4836]...) in 0.037 sec
Done batch 103 with 64 indices ([4981, 13121, 4142, 8201, 9476]...) in 0.037 sec
Done batch 154 with 64 indices ([9717, 12708, 1837, 12152, 8453]...) in 0.036 sec
Done batch 205 with 64 indices ([13536, 12610, 5363, 11341, 4081]...) in 0.037 sec
Done batch 256 with 64 indices ([25, 1522, 7463, 10508, 11337]...) in 0.037 sec
Apply ortho pmode constraint at iter 5, relative pmode power = [0.366 0.161 0.127 0.122 0.112 0.112], probe int sum = 477.0992
Apply fix probe int constraint at iter 5, probe int sum = 450.4553
Apply z-direction Gaussian blur with std = 1 px on obja at iter 5
Apply z-direction Gaussian blur with std = 1 px on objp at iter 5
Apply hard positivity constraint on objp at iter 5
Iter: 5, Total Loss: 0.2465, loss_single: 0.2453, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0012, loss_simlar: 0.0000, in 9.617 sec

Saving summary figures for iter 5
Iter: 6, obja.requires_grad = True
Iter: 6, objp.requires_grad = True
Iter: 6, obj_tilts.requires_grad = False
Iter: 6, probe.requires_grad = True
Iter: 6, probe_pos_shifts.requires_grad = True
Done batch 1 with 64 indices ([1741, 14959, 11466, 6584, 15734]...) in 0.041 sec
Done batch 52 with 64 indices ([16195, 12373, 13737, 1722, 14314]...) in 0.038 sec
Done batch 103 with 64 indices ([4496, 7996, 3308, 11270, 3643]...) in 0.038 sec
Done batch 154 with 64 indices ([1295, 2210, 5241, 4046, 15434]...) in 0.037 sec
Done batch 205 with 64 indices ([1343, 2946, 5114, 13414, 7074]...) in 0.038 sec
Done batch 256 with 64 indices ([5765, 843, 9000, 9618, 15744]...) in 0.037 sec
Apply ortho pmode constraint at iter 6, relative pmode power = [0.4   0.185 0.122 0.119 0.095 0.079], probe int sum = 435.1956
Apply fix probe int constraint at iter 6, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 6
Apply z-direction Gaussian blur with std = 1 px on objp at iter 6
Apply hard positivity constraint on objp at iter 6
Iter: 6, Total Loss: 0.2416, loss_single: 0.2404, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0012, loss_simlar: 0.0000, in 9.721 sec

Iter: 7, obja.requires_grad = True
Iter: 7, objp.requires_grad = True
Iter: 7, obj_tilts.requires_grad = False
Iter: 7, probe.requires_grad = True
Iter: 7, probe_pos_shifts.requires_grad = True
Done batch 1 with 64 indices ([8687, 8298, 6907, 15770, 550]...) in 0.037 sec
Done batch 52 with 64 indices ([13929, 11909, 1087, 5905, 13873]...) in 0.037 sec
Done batch 103 with 64 indices ([1719, 4166, 9048, 15192, 4814]...) in 0.036 sec
Done batch 154 with 64 indices ([16272, 14757, 15779, 4980, 6902]...) in 0.037 sec
Done batch 205 with 64 indices ([13164, 2067, 10586, 767, 10460]...) in 0.037 sec
Done batch 256 with 64 indices ([13356, 3994, 6136, 2288, 974]...) in 0.036 sec
Apply ortho pmode constraint at iter 7, relative pmode power = [0.408 0.196 0.123 0.121 0.087 0.066], probe int sum = 448.8745
Apply fix probe int constraint at iter 7, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 7
Apply z-direction Gaussian blur with std = 1 px on objp at iter 7
Apply hard positivity constraint on objp at iter 7
Iter: 7, Total Loss: 0.2413, loss_single: 0.2401, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0012, loss_simlar: 0.0000, in 9.621 sec

Iter: 8, obja.requires_grad = True
Iter: 8, objp.requires_grad = True
Iter: 8, obj_tilts.requires_grad = False
Iter: 8, probe.requires_grad = True
Iter: 8, probe_pos_shifts.requires_grad = True
Done batch 1 with 64 indices ([9506, 8866, 9747, 3827, 5658]...) in 0.041 sec
Done batch 52 with 64 indices ([16161, 2094, 9130, 7859, 15155]...) in 0.036 sec
Done batch 103 with 64 indices ([3504, 3517, 16254, 4614, 10678]...) in 0.037 sec
Done batch 154 with 64 indices ([15676, 12906, 5688, 8236, 3525]...) in 0.037 sec
Done batch 205 with 64 indices ([15665, 7490, 9000, 4576, 15421]...) in 0.036 sec
Done batch 256 with 64 indices ([889, 12677, 10533, 11371, 16243]...) in 0.038 sec
Apply ortho pmode constraint at iter 8, relative pmode power = [0.403 0.203 0.129 0.128 0.081 0.057], probe int sum = 460.2045
Apply fix probe int constraint at iter 8, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 8
Apply z-direction Gaussian blur with std = 1 px on objp at iter 8
Apply hard positivity constraint on objp at iter 8
Iter: 8, Total Loss: 0.2412, loss_single: 0.2399, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0012, loss_simlar: 0.0000, in 9.643 sec

Iter: 9, obja.requires_grad = True
Iter: 9, objp.requires_grad = True
Iter: 9, obj_tilts.requires_grad = False
Iter: 9, probe.requires_grad = True
Iter: 9, probe_pos_shifts.requires_grad = True
Done batch 1 with 64 indices ([6963, 821, 899, 1917, 1089]...) in 0.037 sec
Done batch 52 with 64 indices ([1687, 56, 2720, 14625, 7831]...) in 0.036 sec
Done batch 103 with 64 indices ([4171, 8096, 3898, 33, 7157]...) in 0.037 sec
Done batch 154 with 64 indices ([11308, 3140, 1919, 11712, 6418]...) in 0.036 sec
Done batch 205 with 64 indices ([2045, 5655, 4351, 13015, 10463]...) in 0.037 sec
Done batch 256 with 64 indices ([207, 10666, 13105, 7848, 16225]...) in 0.036 sec
Apply ortho pmode constraint at iter 9, relative pmode power = [0.386 0.204 0.139 0.138 0.081 0.053], probe int sum = 475.1985
Apply fix probe int constraint at iter 9, probe int sum = 450.4553
Apply z-direction Gaussian blur with std = 1 px on obja at iter 9
Apply z-direction Gaussian blur with std = 1 px on objp at iter 9
Apply hard positivity constraint on objp at iter 9
Iter: 9, Total Loss: 0.2417, loss_single: 0.2405, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0012, loss_simlar: 0.0000, in 9.728 sec

Iter: 10, obja.requires_grad = True
Iter: 10, objp.requires_grad = True
Iter: 10, obj_tilts.requires_grad = False
Iter: 10, probe.requires_grad = True
Iter: 10, probe_pos_shifts.requires_grad = True
Done batch 1 with 64 indices ([11725, 16229, 533, 357, 15327]...) in 0.036 sec
Done batch 52 with 64 indices ([6002, 15773, 10359, 6349, 15739]...) in 0.038 sec
Done batch 103 with 64 indices ([8510, 14693, 3879, 4098, 1518]...) in 0.042 sec
Done batch 154 with 64 indices ([13975, 8583, 10362, 15730, 5724]...) in 0.037 sec
Done batch 205 with 64 indices ([6336, 12338, 3884, 11048, 3109]...) in 0.039 sec
Done batch 256 with 64 indices ([1297, 13036, 10651, 8688, 12474]...) in 0.042 sec
Apply ortho pmode constraint at iter 10, relative pmode power = [0.363 0.198 0.149 0.148 0.085 0.058], probe int sum = 491.6490
Apply fix probe int constraint at iter 10, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 10
Apply z-direction Gaussian blur with std = 1 px on objp at iter 10
Apply hard positivity constraint on objp at iter 10
Iter: 10, Total Loss: 0.2418, loss_single: 0.2406, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0013, loss_simlar: 0.0000, in 13.938 sec

Saving summary figures for iter 10

### The PtyRADSolver is finished in 126.501 sec, or 2 min 6.501 sec ###
Mon Sep 23 23:24:14 EDT 2024
