/home/fs01/cl2696/workspace/ptyrad
c0001
Mon Sep 23 22:53:46 EDT 2024
params_path = params/demo/tBL_WSe2_reconstruct.yml
Mon Sep 23 22:53:47 2024       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 520.61.05    Driver Version: 520.61.05    CUDA Version: 11.8     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA A100-SXM...  On   | 00000000:81:00.0 Off |                    0 |
| N/A   33C    P0    62W / 500W |      0MiB / 81920MiB |      0%      Default |
|                               |                      |             Disabled |
+-------------------------------+----------------------+----------------------+
|   1  NVIDIA A100-SXM...  On   | 00000000:C1:00.0 Off |                    0 |
| N/A   34C    P0    59W / 500W |      0MiB / 81920MiB |      0%      Default |
|                               |                      |             Disabled |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
PyTorch version:  2.4.1
PyTorch version:  2.4.1
CUDA available:  True
CUDA version:  11.8
CUDA available:  True
CUDA version:  11.8
CUDA device count:  2
CUDA device count:  2
CUDA device:  ['NVIDIA A100-SXM4-80GB', 'NVIDIA A100-SXM4-80GB']
CUDA device:  ['NVIDIA A100-SXM4-80GB', 'NVIDIA A100-SXM4-80GB']
ptyrad version: v0.1.0-beta2.5
ptyrad version: v0.1.0-beta2.5
### Loading params file ###### Loading params file ###

Success! Loaded .yml file path = params/demo/tBL_WSe2_reconstruct.ymlSuccess! Loaded .yml file path =
 params/demo/tBL_WSe2_reconstruct.yml

Derived values given input exp_params:
kv          = 80 kV
wavelength  = 0.0418 Ang
conv_angle  = 24.9 mrad
Npix        = 128 px
dk          = 0.0523 Ang^-1
kMax        = 3.3467 Ang^-1
alpha_max   = 139.7495 mrad
dx          = 0.1494 Ang, Nyquist-limited dmin = 2*dx = 0.2988 Ang
Rayleigh-limited resolution  = 1.0230 Ang (0.61*lambda/alpha for focused probe )
Real space probe extent = 19.1232 Ang
Detected kernel version 4.18.0, which is below the recommended minimum of 5.5.0; this can cause the process to hang. It is recommended to upgrade the kernel to the minimum version or higher.
Accelerator DataLoader split_batches = True

### Initializing Initializer ###

### Initializing cache ###
use_cached_obj   = False
use_cached_probe = False
use_cached_pos   = False

### Initializing exp_params ###
Input values are displayed below:
kv: 80
conv_angle: 24.9
Npix: 128
dx_spec: 0.1494
defocus: 0
c3: 0
z_distance: 1
Nlayer: 12
N_scans: 16384
N_scan_slow: 128
N_scan_fast: 128
scan_step_size: 0.429
scan_flipT: None
scan_affine: None
scan_rand_std: 0.15
omode_max: 1
omode_init_occu: {'occu_type': 'uniform', 'init_occu': None}
pmode_max: 6
pmode_init_pows: [0.02]
probe_permute: None
meas_permute: None
meas_reshape: None
meas_flipT: [1, 0, 0]
meas_crop: None
meas_resample: None
meas_add_source_size: None
meas_add_detector_blur: None
meas_add_poisson_noise: None

Derived values given input exp_params:
kv          = 80 kV
wavelength  = 0.0418 Ang
conv_angle  = 24.9 mrad
Npix        = 128 px
dk          = 0.0523 Ang^-1
kMax        = 3.3467 Ang^-1
alpha_max   = 139.7495 mrad
dx          = 0.1494 Ang, Nyquist-limited dmin = 2*dx = 0.2988 Ang
Rayleigh-limited resolution  = 1.0230 Ang (0.61*lambda/alpha for focused probe )
Real space probe extent = 19.1232 Ang

### Initializing measurements from 'raw' ###
Imported meausrements shape = (16384, 128, 128)
Imported meausrements int. statistics (min, mean, max) = (-30.8785, 1814.7064, 99441.8047)
Flipping measurements with [flipup, fliplr, transpose] = [1, 0, 0]
Minimum value of -30.8785 subtracted due to the positive px value constraint of measurements
Normalizing measurements so the averaged measurement has max intensity at 1
Radius of bright field disk             (rbf) = 11.0 px, suggested probe_mask_k radius (rbf*2/Npix) > 0.17
meausrements int. statistics (min, mean, max) = (0.0000, 0.0275, 1.4818)
measurements                      (N, Ky, Kx) = float32, (16384, 128, 128)

### Initializing probe from 'simu' ###
Use exp_params and default values instead for simulation
Start simulating STEM probe
kv          = 80 kV
wavelength  = 0.0418 Ang
conv_angle  = 24.9 mrad
Npix        = 128 px
dk          = 0.0523 Ang^-1
kMax        = 3.3467 Ang^-1
alpha_max   = 139.7447 mrad
dx          = 0.1494 Ang, Nyquist-limited dmin = 2*dx = 0.2988 Ang
Rayleigh-limited resolution  = 1.0229 Ang (0.61*lambda/alpha for focused probe )
Real space probe extent = 19.1232 Ang
Start making mixed-state STEM probe with 6 incoherent probe modes
Relative power of probe modes = [0.9  0.02 0.02 0.02 0.02 0.02]
kv          = 80 kV
wavelength  = 0.0418 Ang
conv_angle  = 24.9 mrad
Npix        = 128 px
dk          = 0.0523 Ang^-1
kMax        = 3.3467 Ang^-1
alpha_max   = 139.7447 mrad
dx          = 0.1494 Ang, Nyquist-limited dmin = 2*dx = 0.2988 Ang
Rayleigh-limited resolution  = 1.0229 Ang (0.61*lambda/alpha for focused probe )
Real space probe extent = 19.1232 Ang
probe                         (pmode, Ny, Nx) = complex64, (6, 128, 128)
sum(|probe_data|**2) = 450.46, while sum(meas)/len(meas) = 450.46

### Initializing probe pos from 'simu' ###
Simulating probe positions with dx_spec = 0.1494, scan_step_size = 0.429, N_scan_fast = 128, N_scan_slow = 128
Applying Gaussian distributed random displacement with std = 0.15 px to scan positions
crop_pos                                (N,2) = int16, (16384, 2)
crop_pos 1st and last px coords (y,x)         = ([50, 50], [415, 414])
crop_pos extent (Ang)                         = [54.6804 54.6804]
probe_pos_shifts                        (N,2) = float32, (16384, 2)

### Initializing obj from 'simu' ###
obj_shape is not provided, use exp_params, position range, and probe shape for estimated obj_shape (omode, Nz, Ny, Nx)
object                    (omode, Nz, Ny, Nx) = complex64, (1, 12, 592, 592)
object extent                 (Z, Y, X) (Ang) = [12.     88.4448 88.4448]

### Initializing omode_occu from 'uniform' ###
omode_occu                            (omode) = float32, (1,)

### Initializing H (Fresnel propagator) ###
Calculating H with probe_shape = [128 128], z_distance = 1.0000 Ang, lambd = 0.0418 Ang, extent = [19.1232 19.1232] Ang
H                                    (Ky, Kx) = complex64, (128, 128)

### Initializing obj tilts from = 'simu' ###
Initialized obj_tilts with init_tilts = [[0, 0]] (theta_y, theta_x) mrad
obj_tilts                              (N, 2) = float32, (1, 2)

### Checking consistency between input params with the initialized variables ###
Npix, DP measurements, probe, and H shapes are consistent as '128'
N_scans, len(meas), N_scan_slow*N_scan_fast, len(crop_pos), and len(probe_pos_shifts) are consistent as '16384'
obj.shape[0] is consistent with len(omode_occu) as '1'
obj.shape[1] is consistent with Nlayer as '12'
obj_tilts is consistent with either 1 or N_scans
Pass the consistency check of initialized variables, initialization is done!

### Initializing loss function ###

### Initializing constraint function ###

### Done initializing PtyRADSolver ###

### Starting the PtyRADSolver in reconstruct mode ###

### PtychoAD optimizable variables ###
obja            : torch.Size([1, 12, 592, 592])   , torch.float32   , device:cuda:0, grad:True , lr:5e-03
objp            : torch.Size([1, 12, 592, 592])   , torch.float32   , device:cuda:0, grad:True , lr:5e-03
obj_tilts       : torch.Size([1, 2])              , torch.float32   , device:cuda:0, grad:False, lr:0e+00
probe           : torch.Size([6, 128, 128, 2])    , torch.float32   , device:cuda:0, grad:True , lr:1e-03
probe_pos_shifts: torch.Size([16384, 2])          , torch.float32   , device:cuda:0, grad:True , lr:5e-03

### Optimizable variables statitsics ###
Total measurement values:    268,435,456                
Total optimizing variables:  8,640,512                
Overdetermined ratio:        31.07

### Model behavior ###
Obj preblur       : False
Tilt propagator   : False
Sub-px probe shift: True
Detector blur     : False

### Creating PyTorch 'Adam' optimizer with configs = {} ###

### Generating indices, batches, and output_path ###
d90 = 23.000 px or 3.436 Ang
Selecting indices with the 'full' mode 
d90 = 23.000 px or 3.436 Ang
Generated 512 'random' groups of ~32 scan positions in 0.001 sec
The effective batch size (i.e., how many probe positions are simultaneously used for 1 update of ptychographic parameters) is batch_size * grad_accumulation = 32 * 1 = 32
output_path = 'output/tBL-WSe2//20240923_full_N16384_dp128_flipT100_random32_p6_1obj_12slice_dz1_Adam_plr1e-3_oalr5e-3_oplr5e-3_slr5e-3_ozblur1_opos_sng1.0_spr0.1_altas_benchmark_acc2' is generated!
Successfully copy 'tBL_WSe2_reconstruct.yml' to 'output/tBL-WSe2//20240923_full_N16384_dp128_flipT100_random32_p6_1obj_12slice_dz1_Adam_plr1e-3_oalr5e-3_oplr5e-3_slr5e-3_ozblur1_opos_sng1.0_spr0.1_altas_benchmark_acc2'
len(DataLoader) = num_batches = 512, DataLoader.batch_size = 32
len(DataLoader) = num_batches = 512, DataLoader.batch_size = 32

### Start the PtyRAD iterative ptycho reconstruction ###
Iter: 1, obja.requires_grad = True
Iter: 1, objp.requires_grad = True
Iter: 1, obj_tilts.requires_grad = False
Iter: 1, probe.requires_grad = True
Iter: 1, probe_pos_shifts.requires_grad = True
Done batch 1 with 16 indices ([11638, 12678, 4201, 8530, 15853]...) in 0.171 sec
Done batch 103 with 16 indices ([10516, 11258, 14440, 3665, 9499]...) in 0.041 sec
Done batch 205 with 16 indices ([13874, 9603, 6197, 13007, 13092]...) in 0.031 sec
Done batch 307 with 16 indices ([9977, 14316, 6446, 13154, 9822]...) in 0.036 sec
Done batch 409 with 16 indices ([14806, 5887, 3614, 15322, 10359]...) in 0.031 sec
Done batch 512 with 16 indices ([14008, 10436, 7332, 10792, 2831]...) in 0.032 sec
Apply ortho pmode constraint at iter 1, relative pmode power = [0.381 0.129 0.128 0.125 0.124 0.114], probe int sum = 801.2081
Apply fix probe int constraint at iter 1, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 1
Apply z-direction Gaussian blur with std = 1 px on objp at iter 1
Apply hard positivity constraint on objp at iter 1
Iter: 1, Total Loss: 0.4075, loss_single: 0.4054, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0022, loss_simlar: 0.0000, in 20.547 sec

Iter: 2, obja.requires_grad = True
Iter: 2, objp.requires_grad = True
Iter: 2, obj_tilts.requires_grad = False
Iter: 2, probe.requires_grad = True
Iter: 2, probe_pos_shifts.requires_grad = True
Done batch 1 with 16 indices ([1010, 2448, 6032, 6508, 15092]...) in 0.043 sec
Done batch 103 with 16 indices ([929, 9488, 9577, 3878, 15127]...) in 0.034 sec
Done batch 205 with 16 indices ([2802, 4679, 6315, 16359, 16302]...) in 0.027 sec
Done batch 307 with 16 indices ([6560, 182, 2750, 9127, 14525]...) in 0.036 sec
Done batch 409 with 16 indices ([9983, 8070, 4935, 9767, 2418]...) in 0.027 sec
Done batch 512 with 16 indices ([5753, 4107, 1307, 13536, 8363]...) in 0.035 sec
Apply ortho pmode constraint at iter 2, relative pmode power = [0.284 0.161 0.153 0.149 0.132 0.121], probe int sum = 717.2372
Apply fix probe int constraint at iter 2, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 2
Apply z-direction Gaussian blur with std = 1 px on objp at iter 2
Apply hard positivity constraint on objp at iter 2
Iter: 2, Total Loss: 0.2712, loss_single: 0.2698, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0014, loss_simlar: 0.0000, in 17.361 sec

Iter: 3, obja.requires_grad = True
Iter: 3, objp.requires_grad = True
Iter: 3, obj_tilts.requires_grad = False
Iter: 3, probe.requires_grad = True
Iter: 3, probe_pos_shifts.requires_grad = True
Done batch 1 with 16 indices ([13947, 5567, 3316, 10937, 11314]...) in 0.036 sec
Done batch 103 with 16 indices ([10557, 7747, 9660, 6005, 5303]...) in 0.035 sec
Done batch 205 with 16 indices ([2646, 4948, 11381, 9296, 1589]...) in 0.027 sec
Done batch 307 with 16 indices ([977, 14328, 13073, 2909, 2137]...) in 0.037 sec
Done batch 409 with 16 indices ([14557, 14161, 7240, 2335, 3434]...) in 0.031 sec
Done batch 512 with 16 indices ([13648, 7655, 11466, 13250, 5563]...) in 0.034 sec
Apply ortho pmode constraint at iter 3, relative pmode power = [0.281 0.185 0.172 0.139 0.116 0.108], probe int sum = 586.6896
Apply fix probe int constraint at iter 3, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 3
Apply z-direction Gaussian blur with std = 1 px on objp at iter 3
Apply hard positivity constraint on objp at iter 3
Iter: 3, Total Loss: 0.2545, loss_single: 0.2533, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0013, loss_simlar: 0.0000, in 17.413 sec

Iter: 4, obja.requires_grad = True
Iter: 4, objp.requires_grad = True
Iter: 4, obj_tilts.requires_grad = False
Iter: 4, probe.requires_grad = True
Iter: 4, probe_pos_shifts.requires_grad = True
Done batch 1 with 16 indices ([10178, 11214, 1142, 6221, 5918]...) in 0.037 sec
Done batch 103 with 16 indices ([7442, 16182, 1126, 5609, 13855]...) in 0.042 sec
Done batch 205 with 16 indices ([11373, 11822, 9255, 1454, 14072]...) in 0.033 sec
Done batch 307 with 16 indices ([2422, 15633, 16173, 10106, 500]...) in 0.027 sec
Done batch 409 with 16 indices ([12345, 11865, 3846, 11381, 11270]...) in 0.035 sec
Done batch 512 with 16 indices ([3093, 14726, 14102, 12364, 12854]...) in 0.036 sec
Apply ortho pmode constraint at iter 4, relative pmode power = [0.294 0.182 0.148 0.148 0.143 0.084], probe int sum = 531.5906
Apply fix probe int constraint at iter 4, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 4
Apply z-direction Gaussian blur with std = 1 px on objp at iter 4
Apply hard positivity constraint on objp at iter 4
Iter: 4, Total Loss: 0.2486, loss_single: 0.2473, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0013, loss_simlar: 0.0000, in 17.421 sec

Iter: 5, obja.requires_grad = True
Iter: 5, objp.requires_grad = True
Iter: 5, obj_tilts.requires_grad = False
Iter: 5, probe.requires_grad = True
Iter: 5, probe_pos_shifts.requires_grad = True
Done batch 1 with 16 indices ([11475, 6853, 9518, 1994, 7013]...) in 0.034 sec
Done batch 103 with 16 indices ([108, 13642, 643, 8036, 2132]...) in 0.036 sec
Done batch 205 with 16 indices ([3438, 8660, 2484, 11775, 7519]...) in 0.034 sec
Done batch 307 with 16 indices ([14000, 4579, 110, 11684, 2352]...) in 0.034 sec
Done batch 409 with 16 indices ([4586, 12784, 14387, 15169, 13734]...) in 0.027 sec
Done batch 512 with 16 indices ([6308, 48, 9984, 7004, 559]...) in 0.035 sec
Apply ortho pmode constraint at iter 5, relative pmode power = [0.316 0.201 0.185 0.165 0.081 0.054], probe int sum = 484.7249
Apply fix probe int constraint at iter 5, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 5
Apply z-direction Gaussian blur with std = 1 px on objp at iter 5
Apply hard positivity constraint on objp at iter 5
Iter: 5, Total Loss: 0.2456, loss_single: 0.2443, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0013, loss_simlar: 0.0000, in 19.391 sec

Saving summary figures for iter 5
Iter: 6, obja.requires_grad = True
Iter: 6, objp.requires_grad = True
Iter: 6, obj_tilts.requires_grad = False
Iter: 6, probe.requires_grad = True
Iter: 6, probe_pos_shifts.requires_grad = True
Done batch 1 with 16 indices ([10602, 1219, 16151, 6322, 2429]...) in 0.042 sec
Done batch 103 with 16 indices ([7179, 14228, 6081, 3435, 11774]...) in 0.046 sec
Done batch 205 with 16 indices ([2235, 14203, 5658, 12996, 14412]...) in 0.027 sec
Done batch 307 with 16 indices ([15045, 222, 6045, 1892, 9308]...) in 0.035 sec
Done batch 409 with 16 indices ([10094, 739, 11453, 3578, 12441]...) in 0.036 sec
Done batch 512 with 16 indices ([10321, 15702, 15142, 10031, 16364]...) in 0.034 sec
Apply ortho pmode constraint at iter 6, relative pmode power = [0.297 0.195 0.191 0.175 0.081 0.061], probe int sum = 516.6741
Apply fix probe int constraint at iter 6, probe int sum = 450.4553
Apply z-direction Gaussian blur with std = 1 px on obja at iter 6
Apply z-direction Gaussian blur with std = 1 px on objp at iter 6
Apply hard positivity constraint on objp at iter 6
Iter: 6, Total Loss: 0.2447, loss_single: 0.2434, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0013, loss_simlar: 0.0000, in 18.176 sec

Iter: 7, obja.requires_grad = True
Iter: 7, objp.requires_grad = True
Iter: 7, obj_tilts.requires_grad = False
Iter: 7, probe.requires_grad = True
Iter: 7, probe_pos_shifts.requires_grad = True
Done batch 1 with 16 indices ([3924, 5933, 9305, 8283, 2159]...) in 0.039 sec
Done batch 103 with 16 indices ([8230, 8339, 9326, 13751, 10111]...) in 0.027 sec
Done batch 205 with 16 indices ([15142, 11371, 13164, 4580, 15237]...) in 0.034 sec
Done batch 307 with 16 indices ([13768, 11639, 336, 339, 6725]...) in 0.037 sec
Done batch 409 with 16 indices ([8341, 8409, 5343, 11443, 8904]...) in 0.027 sec
Done batch 512 with 16 indices ([13311, 5081, 8505, 4923, 4381]...) in 0.038 sec
Apply ortho pmode constraint at iter 7, relative pmode power = [0.3   0.209 0.202 0.18  0.071 0.038], probe int sum = 492.2336
Apply fix probe int constraint at iter 7, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 7
Apply z-direction Gaussian blur with std = 1 px on objp at iter 7
Apply hard positivity constraint on objp at iter 7
Iter: 7, Total Loss: 0.2452, loss_single: 0.2438, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0014, loss_simlar: 0.0000, in 18.096 sec

Iter: 8, obja.requires_grad = True
Iter: 8, objp.requires_grad = True
Iter: 8, obj_tilts.requires_grad = False
Iter: 8, probe.requires_grad = True
Iter: 8, probe_pos_shifts.requires_grad = True
Done batch 1 with 16 indices ([11092, 6609, 7589, 8097, 12681]...) in 0.035 sec
Done batch 103 with 16 indices ([2921, 1020, 10475, 8081, 1273]...) in 0.034 sec
Done batch 205 with 16 indices ([4421, 6260, 10880, 15289, 4050]...) in 0.039 sec
Done batch 307 with 16 indices ([9097, 12210, 14005, 12472, 2383]...) in 0.037 sec
Done batch 409 with 16 indices ([11778, 13280, 6977, 1582, 1614]...) in 0.027 sec
Done batch 512 with 16 indices ([15746, 16179, 7269, 7359, 13656]...) in 0.037 sec
Apply ortho pmode constraint at iter 8, relative pmode power = [0.288 0.222 0.216 0.185 0.059 0.03 ], probe int sum = 504.8530
Apply fix probe int constraint at iter 8, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 8
Apply z-direction Gaussian blur with std = 1 px on objp at iter 8
Apply hard positivity constraint on objp at iter 8
Iter: 8, Total Loss: 0.2469, loss_single: 0.2455, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0014, loss_simlar: 0.0000, in 20.395 sec

Iter: 9, obja.requires_grad = True
Iter: 9, objp.requires_grad = True
Iter: 9, obj_tilts.requires_grad = False
Iter: 9, probe.requires_grad = True
Iter: 9, probe_pos_shifts.requires_grad = True
Done batch 1 with 16 indices ([9506, 16354, 483, 8540, 4261]...) in 0.035 sec
Done batch 103 with 16 indices ([12939, 10101, 9862, 6906, 7307]...) in 0.034 sec
Done batch 205 with 16 indices ([14205, 8841, 7901, 5315, 8780]...) in 0.034 sec
Done batch 307 with 16 indices ([9521, 4382, 8265, 12524, 6288]...) in 0.035 sec
Done batch 409 with 16 indices ([12393, 3847, 7181, 15352, 11104]...) in 0.037 sec
Done batch 512 with 16 indices ([194, 4756, 11958, 15508, 8848]...) in 0.037 sec
Apply ortho pmode constraint at iter 9, relative pmode power = [0.29  0.213 0.209 0.204 0.057 0.028], probe int sum = 502.6068
Apply fix probe int constraint at iter 9, probe int sum = 450.4553
Apply z-direction Gaussian blur with std = 1 px on obja at iter 9
Apply z-direction Gaussian blur with std = 1 px on objp at iter 9
Apply hard positivity constraint on objp at iter 9
Iter: 9, Total Loss: 0.2494, loss_single: 0.2480, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0014, loss_simlar: 0.0000, in 23.139 sec

Iter: 10, obja.requires_grad = True
Iter: 10, objp.requires_grad = True
Iter: 10, obj_tilts.requires_grad = False
Iter: 10, probe.requires_grad = True
Iter: 10, probe_pos_shifts.requires_grad = True
Done batch 1 with 16 indices ([14201, 2879, 3845, 11557, 4676]...) in 0.044 sec
Done batch 103 with 16 indices ([4268, 1759, 13030, 7425, 5014]...) in 0.037 sec
Done batch 205 with 16 indices ([10041, 4933, 1974, 9432, 14948]...) in 0.035 sec
Done batch 307 with 16 indices ([7076, 6605, 946, 11448, 14056]...) in 0.037 sec
Done batch 409 with 16 indices ([5906, 12479, 7099, 2108, 5486]...) in 0.035 sec
Done batch 512 with 16 indices ([16222, 5256, 9507, 9578, 11886]...) in 0.034 sec
Apply ortho pmode constraint at iter 10, relative pmode power = [0.278 0.222 0.214 0.208 0.054 0.026], probe int sum = 496.6267
Apply fix probe int constraint at iter 10, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 10
Apply z-direction Gaussian blur with std = 1 px on objp at iter 10
Apply hard positivity constraint on objp at iter 10
Iter: 10, Total Loss: 0.2505, loss_single: 0.2491, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0014, loss_simlar: 0.0000, in 19.591 sec

Saving summary figures for iter 10

### The PtyRADSolver is finished in 216.044 sec, or 3 min 36.044 sec ###
Mon Sep 23 22:57:54 EDT 2024
