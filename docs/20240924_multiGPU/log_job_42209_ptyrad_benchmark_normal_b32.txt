/home/fs01/cl2696/workspace/ptyrad
c0001
Mon Sep 23 23:20:48 EDT 2024
params_path = params/demo/tBL_WSe2_reconstruct.yml
Mon Sep 23 23:20:49 2024       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 520.61.05    Driver Version: 520.61.05    CUDA Version: 11.8     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA A100-SXM...  On   | 00000000:81:00.0 Off |                    0 |
| N/A   35C    P0    63W / 500W |      0MiB / 81920MiB |      0%      Default |
|                               |                      |             Disabled |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
PyTorch version:  2.4.1
CUDA available:  True
CUDA version:  11.8
CUDA device count:  1
CUDA device:  ['NVIDIA A100-SXM4-80GB']
ptyrad version: v0.1.0-beta2.5
### Loading params file ###
Success! Loaded .yml file path = params/demo/tBL_WSe2_reconstruct.yml
Detected kernel version 4.18.0, which is below the recommended minimum of 5.5.0; this can cause the process to hang. It is recommended to upgrade the kernel to the minimum version or higher.
Accelerator DataLoader split_batches = True

### Initializing Initializer ###

### Initializing cache ###
use_cached_obj   = False
use_cached_probe = False
use_cached_pos   = False

### Initializing exp_params ###
Input values are displayed below:
kv: 80
conv_angle: 24.9
Npix: 128
dx_spec: 0.1494
defocus: 0
c3: 0
z_distance: 1
Nlayer: 12
N_scans: 16384
N_scan_slow: 128
N_scan_fast: 128
scan_step_size: 0.429
scan_flipT: None
scan_affine: None
scan_rand_std: 0.15
omode_max: 1
omode_init_occu: {'occu_type': 'uniform', 'init_occu': None}
pmode_max: 6
pmode_init_pows: [0.02]
probe_permute: None
meas_permute: None
meas_reshape: None
meas_flipT: [1, 0, 0]
meas_crop: None
meas_resample: None
meas_add_source_size: None
meas_add_detector_blur: None
meas_add_poisson_noise: None

Derived values given input exp_params:
kv          = 80 kV
wavelength  = 0.0418 Ang
conv_angle  = 24.9 mrad
Npix        = 128 px
dk          = 0.0523 Ang^-1
kMax        = 3.3467 Ang^-1
alpha_max   = 139.7495 mrad
dx          = 0.1494 Ang, Nyquist-limited dmin = 2*dx = 0.2988 Ang
Rayleigh-limited resolution  = 1.0230 Ang (0.61*lambda/alpha for focused probe )
Real space probe extent = 19.1232 Ang

### Initializing measurements from 'raw' ###
Imported meausrements shape = (16384, 128, 128)
Imported meausrements int. statistics (min, mean, max) = (-30.8785, 1814.7064, 99441.8047)
Flipping measurements with [flipup, fliplr, transpose] = [1, 0, 0]
Minimum value of -30.8785 subtracted due to the positive px value constraint of measurements
Normalizing measurements so the averaged measurement has max intensity at 1
Radius of bright field disk             (rbf) = 11.0 px, suggested probe_mask_k radius (rbf*2/Npix) > 0.17
meausrements int. statistics (min, mean, max) = (0.0000, 0.0275, 1.4818)
measurements                      (N, Ky, Kx) = float32, (16384, 128, 128)

### Initializing probe from 'simu' ###
Use exp_params and default values instead for simulation
Start simulating STEM probe
kv          = 80 kV
wavelength  = 0.0418 Ang
conv_angle  = 24.9 mrad
Npix        = 128 px
dk          = 0.0523 Ang^-1
kMax        = 3.3467 Ang^-1
alpha_max   = 139.7447 mrad
dx          = 0.1494 Ang, Nyquist-limited dmin = 2*dx = 0.2988 Ang
Rayleigh-limited resolution  = 1.0229 Ang (0.61*lambda/alpha for focused probe )
Real space probe extent = 19.1232 Ang
Start making mixed-state STEM probe with 6 incoherent probe modes
Relative power of probe modes = [0.9  0.02 0.02 0.02 0.02 0.02]
probe                         (pmode, Ny, Nx) = complex64, (6, 128, 128)
sum(|probe_data|**2) = 450.46, while sum(meas)/len(meas) = 450.46

### Initializing probe pos from 'simu' ###
Simulating probe positions with dx_spec = 0.1494, scan_step_size = 0.429, N_scan_fast = 128, N_scan_slow = 128
Applying Gaussian distributed random displacement with std = 0.15 px to scan positions
crop_pos                                (N,2) = int16, (16384, 2)
crop_pos 1st and last px coords (y,x)         = ([50, 50], [414, 414])
crop_pos extent (Ang)                         = [54.6804 54.6804]
probe_pos_shifts                        (N,2) = float32, (16384, 2)

### Initializing obj from 'simu' ###
obj_shape is not provided, use exp_params, position range, and probe shape for estimated obj_shape (omode, Nz, Ny, Nx)
object                    (omode, Nz, Ny, Nx) = complex64, (1, 12, 592, 592)
object extent                 (Z, Y, X) (Ang) = [12.     88.4448 88.4448]

### Initializing omode_occu from 'uniform' ###
omode_occu                            (omode) = float32, (1,)

### Initializing H (Fresnel propagator) ###
Calculating H with probe_shape = [128 128], z_distance = 1.0000 Ang, lambd = 0.0418 Ang, extent = [19.1232 19.1232] Ang
H                                    (Ky, Kx) = complex64, (128, 128)

### Initializing obj tilts from = 'simu' ###
Initialized obj_tilts with init_tilts = [[0, 0]] (theta_y, theta_x) mrad
obj_tilts                              (N, 2) = float32, (1, 2)

### Checking consistency between input params with the initialized variables ###
Npix, DP measurements, probe, and H shapes are consistent as '128'
N_scans, len(meas), N_scan_slow*N_scan_fast, len(crop_pos), and len(probe_pos_shifts) are consistent as '16384'
obj.shape[0] is consistent with len(omode_occu) as '1'
obj.shape[1] is consistent with Nlayer as '12'
obj_tilts is consistent with either 1 or N_scans
Pass the consistency check of initialized variables, initialization is done!

### Initializing loss function ###

### Initializing constraint function ###

### Done initializing PtyRADSolver ###

### Starting the PtyRADSolver in reconstruct mode ###

### PtychoAD optimizable variables ###
obja            : torch.Size([1, 12, 592, 592])   , torch.float32   , device:cuda:0, grad:True , lr:5e-03
objp            : torch.Size([1, 12, 592, 592])   , torch.float32   , device:cuda:0, grad:True , lr:5e-03
obj_tilts       : torch.Size([1, 2])              , torch.float32   , device:cuda:0, grad:False, lr:0e+00
probe           : torch.Size([6, 128, 128, 2])    , torch.float32   , device:cuda:0, grad:True , lr:1e-03
probe_pos_shifts: torch.Size([16384, 2])          , torch.float32   , device:cuda:0, grad:True , lr:5e-03

### Optimizable variables statitsics ###
Total measurement values:    268,435,456                
Total optimizing variables:  8,640,512                
Overdetermined ratio:        31.07

### Model behavior ###
Obj preblur       : False
Tilt propagator   : False
Sub-px probe shift: True
Detector blur     : False

### Creating PyTorch 'Adam' optimizer with configs = {} ###

### Generating indices, batches, and output_path ###
d90 = 23.000 px or 3.436 Ang
Selecting indices with the 'full' mode 
Generated 512 'random' groups of ~32 scan positions in 0.001 sec
The effective batch size (i.e., how many probe positions are simultaneously used for 1 update of ptychographic parameters) is batch_size * grad_accumulation = 32 * 1 = 32
output_path = 'output/tBL-WSe2//20240923_full_N16384_dp128_flipT100_random32_p6_1obj_12slice_dz1_Adam_plr1e-3_oalr5e-3_oplr5e-3_slr5e-3_ozblur1_opos_sng1.0_spr0.1_altas_benchmark_normal' is generated!
Successfully copy 'tBL_WSe2_reconstruct.yml' to 'output/tBL-WSe2//20240923_full_N16384_dp128_flipT100_random32_p6_1obj_12slice_dz1_Adam_plr1e-3_oalr5e-3_oplr5e-3_slr5e-3_ozblur1_opos_sng1.0_spr0.1_altas_benchmark_normal'
len(DataLoader) = num_batches = 512, DataLoader.batch_size = 32

### Start the PtyRAD iterative ptycho reconstruction ###
Iter: 1, obja.requires_grad = True
Iter: 1, objp.requires_grad = True
Iter: 1, obj_tilts.requires_grad = False
Iter: 1, probe.requires_grad = True
Iter: 1, probe_pos_shifts.requires_grad = True
Done batch 1 with 32 indices ([14103, 4974, 14715, 6414, 6681]...) in 0.074 sec
Done batch 103 with 32 indices ([191, 6392, 5378, 16275, 9893]...) in 0.021 sec
Done batch 205 with 32 indices ([5241, 14477, 3679, 9940, 6359]...) in 0.022 sec
Done batch 307 with 32 indices ([2855, 4799, 8591, 8057, 6649]...) in 0.022 sec
Done batch 409 with 32 indices ([7753, 8721, 7203, 10382, 13469]...) in 0.019 sec
Done batch 512 with 32 indices ([10862, 5258, 6000, 10759, 13037]...) in 0.019 sec
Apply ortho pmode constraint at iter 1, relative pmode power = [0.374 0.13  0.127 0.127 0.124 0.118], probe int sum = 818.9727
Apply fix probe int constraint at iter 1, probe int sum = 450.4553
Apply z-direction Gaussian blur with std = 1 px on obja at iter 1
Apply z-direction Gaussian blur with std = 1 px on objp at iter 1
Apply hard positivity constraint on objp at iter 1
Iter: 1, Total Loss: 0.4056, loss_single: 0.4034, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0022, loss_simlar: 0.0000, in 15.301 sec

Iter: 2, obja.requires_grad = True
Iter: 2, objp.requires_grad = True
Iter: 2, obj_tilts.requires_grad = False
Iter: 2, probe.requires_grad = True
Iter: 2, probe_pos_shifts.requires_grad = True
Done batch 1 with 32 indices ([10923, 9833, 8036, 3797, 14056]...) in 0.023 sec
Done batch 103 with 32 indices ([15054, 6023, 10430, 678, 1670]...) in 0.019 sec
Done batch 205 with 32 indices ([12919, 13314, 3211, 13917, 9565]...) in 0.024 sec
Done batch 307 with 32 indices ([8610, 14149, 3272, 16307, 772]...) in 0.019 sec
Done batch 409 with 32 indices ([13477, 1497, 11781, 12469, 1244]...) in 0.025 sec
Done batch 512 with 32 indices ([3456, 11745, 1759, 12627, 8681]...) in 0.023 sec
Apply ortho pmode constraint at iter 2, relative pmode power = [0.277 0.177 0.147 0.145 0.131 0.123], probe int sum = 726.7236
Apply fix probe int constraint at iter 2, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 2
Apply z-direction Gaussian blur with std = 1 px on objp at iter 2
Apply hard positivity constraint on objp at iter 2
Iter: 2, Total Loss: 0.2701, loss_single: 0.2687, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0014, loss_simlar: 0.0000, in 11.828 sec

Iter: 3, obja.requires_grad = True
Iter: 3, objp.requires_grad = True
Iter: 3, obj_tilts.requires_grad = False
Iter: 3, probe.requires_grad = True
Iter: 3, probe_pos_shifts.requires_grad = True
Done batch 1 with 32 indices ([11832, 220, 4550, 11511, 4541]...) in 0.023 sec
Done batch 103 with 32 indices ([11817, 12857, 275, 4040, 1677]...) in 0.022 sec
Done batch 205 with 32 indices ([3053, 8840, 8846, 8239, 12431]...) in 0.023 sec
Done batch 307 with 32 indices ([7822, 559, 12789, 10724, 4171]...) in 0.019 sec
Done batch 409 with 32 indices ([13280, 10538, 485, 3222, 12221]...) in 0.024 sec
Done batch 512 with 32 indices ([11422, 4290, 3684, 95, 2753]...) in 0.023 sec
Apply ortho pmode constraint at iter 3, relative pmode power = [0.299 0.222 0.196 0.171 0.06  0.052], probe int sum = 539.3165
Apply fix probe int constraint at iter 3, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 3
Apply z-direction Gaussian blur with std = 1 px on objp at iter 3
Apply hard positivity constraint on objp at iter 3
Iter: 3, Total Loss: 0.2529, loss_single: 0.2517, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0013, loss_simlar: 0.0000, in 11.773 sec

Iter: 4, obja.requires_grad = True
Iter: 4, objp.requires_grad = True
Iter: 4, obj_tilts.requires_grad = False
Iter: 4, probe.requires_grad = True
Iter: 4, probe_pos_shifts.requires_grad = True
Done batch 1 with 32 indices ([13150, 16154, 11622, 139, 10602]...) in 0.023 sec
Done batch 103 with 32 indices ([7628, 3904, 12502, 1711, 6314]...) in 0.024 sec
Done batch 205 with 32 indices ([11446, 11958, 9361, 6082, 15575]...) in 0.019 sec
Done batch 307 with 32 indices ([12156, 7593, 1990, 2817, 12079]...) in 0.021 sec
Done batch 409 with 32 indices ([10346, 13019, 11783, 13976, 8641]...) in 0.023 sec
Done batch 512 with 32 indices ([2133, 731, 2773, 12760, 15845]...) in 0.020 sec
Apply ortho pmode constraint at iter 4, relative pmode power = [0.294 0.219 0.203 0.18  0.065 0.038], probe int sum = 562.7174
Apply fix probe int constraint at iter 4, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 4
Apply z-direction Gaussian blur with std = 1 px on objp at iter 4
Apply hard positivity constraint on objp at iter 4
Iter: 4, Total Loss: 0.2493, loss_single: 0.2481, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0012, loss_simlar: 0.0000, in 11.650 sec

Iter: 5, obja.requires_grad = True
Iter: 5, objp.requires_grad = True
Iter: 5, obj_tilts.requires_grad = False
Iter: 5, probe.requires_grad = True
Iter: 5, probe_pos_shifts.requires_grad = True
Done batch 1 with 32 indices ([2625, 3516, 1145, 10892, 5290]...) in 0.019 sec
Done batch 103 with 32 indices ([14664, 16135, 3694, 10141, 16259]...) in 0.024 sec
Done batch 205 with 32 indices ([11921, 14699, 14321, 4850, 13830]...) in 0.019 sec
Done batch 307 with 32 indices ([6201, 4819, 7689, 10000, 4070]...) in 0.027 sec
Done batch 409 with 32 indices ([15579, 14211, 12730, 9350, 14632]...) in 0.022 sec
Done batch 512 with 32 indices ([9944, 1970, 5983, 1768, 15907]...) in 0.023 sec
Apply ortho pmode constraint at iter 5, relative pmode power = [0.292 0.215 0.212 0.168 0.079 0.034], probe int sum = 528.3644
Apply fix probe int constraint at iter 5, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 5
Apply z-direction Gaussian blur with std = 1 px on objp at iter 5
Apply hard positivity constraint on objp at iter 5
Iter: 5, Total Loss: 0.2445, loss_single: 0.2432, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0013, loss_simlar: 0.0000, in 11.730 sec

Saving summary figures for iter 5
Iter: 6, obja.requires_grad = True
Iter: 6, objp.requires_grad = True
Iter: 6, obj_tilts.requires_grad = False
Iter: 6, probe.requires_grad = True
Iter: 6, probe_pos_shifts.requires_grad = True
Done batch 1 with 32 indices ([14032, 8996, 1618, 13441, 15383]...) in 0.026 sec
Done batch 103 with 32 indices ([10048, 2504, 5630, 13862, 8977]...) in 0.020 sec
Done batch 205 with 32 indices ([10975, 15082, 3376, 11557, 9245]...) in 0.019 sec
Done batch 307 with 32 indices ([7786, 12277, 13966, 16064, 13798]...) in 0.019 sec
Done batch 409 with 32 indices ([16038, 13076, 8989, 4635, 10926]...) in 0.026 sec
Done batch 512 with 32 indices ([14405, 8063, 921, 9393, 12104]...) in 0.026 sec
Apply ortho pmode constraint at iter 6, relative pmode power = [0.3   0.22  0.218 0.121 0.112 0.03 ], probe int sum = 495.9817
Apply fix probe int constraint at iter 6, probe int sum = 450.4553
Apply z-direction Gaussian blur with std = 1 px on obja at iter 6
Apply z-direction Gaussian blur with std = 1 px on objp at iter 6
Apply hard positivity constraint on objp at iter 6
Iter: 6, Total Loss: 0.2434, loss_single: 0.2421, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0013, loss_simlar: 0.0000, in 11.514 sec

Iter: 7, obja.requires_grad = True
Iter: 7, objp.requires_grad = True
Iter: 7, obj_tilts.requires_grad = False
Iter: 7, probe.requires_grad = True
Iter: 7, probe_pos_shifts.requires_grad = True
Done batch 1 with 32 indices ([16365, 15763, 10630, 10072, 13432]...) in 0.020 sec
Done batch 103 with 32 indices ([5061, 890, 1592, 3581, 13627]...) in 0.021 sec
Done batch 205 with 32 indices ([15139, 14360, 4949, 6914, 203]...) in 0.022 sec
Done batch 307 with 32 indices ([4639, 9237, 5605, 4707, 16084]...) in 0.024 sec
Done batch 409 with 32 indices ([6354, 9667, 8962, 11772, 14758]...) in 0.020 sec
Done batch 512 with 32 indices ([1617, 14305, 4717, 3620, 5405]...) in 0.021 sec
Apply ortho pmode constraint at iter 7, relative pmode power = [0.302 0.228 0.221 0.132 0.09  0.027], probe int sum = 479.6216
Apply fix probe int constraint at iter 7, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 7
Apply z-direction Gaussian blur with std = 1 px on objp at iter 7
Apply hard positivity constraint on objp at iter 7
Iter: 7, Total Loss: 0.2441, loss_single: 0.2427, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0014, loss_simlar: 0.0000, in 11.579 sec

Iter: 8, obja.requires_grad = True
Iter: 8, objp.requires_grad = True
Iter: 8, obj_tilts.requires_grad = False
Iter: 8, probe.requires_grad = True
Iter: 8, probe_pos_shifts.requires_grad = True
Done batch 1 with 32 indices ([13688, 4775, 4938, 14747, 14002]...) in 0.022 sec
Done batch 103 with 32 indices ([4704, 6365, 13240, 9194, 14723]...) in 0.027 sec
Done batch 205 with 32 indices ([3308, 9997, 13402, 2213, 8793]...) in 0.022 sec
Done batch 307 with 32 indices ([15383, 12938, 12475, 13679, 11035]...) in 0.021 sec
Done batch 409 with 32 indices ([1872, 14301, 1334, 11112, 3715]...) in 0.020 sec
Done batch 512 with 32 indices ([12183, 10770, 10155, 13124, 11128]...) in 0.022 sec
Apply ortho pmode constraint at iter 8, relative pmode power = [0.295 0.229 0.221 0.154 0.076 0.025], probe int sum = 482.1839
Apply fix probe int constraint at iter 8, probe int sum = 450.4551
Apply z-direction Gaussian blur with std = 1 px on obja at iter 8
Apply z-direction Gaussian blur with std = 1 px on objp at iter 8
Apply hard positivity constraint on objp at iter 8
Iter: 8, Total Loss: 0.2460, loss_single: 0.2446, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0014, loss_simlar: 0.0000, in 11.680 sec

Iter: 9, obja.requires_grad = True
Iter: 9, objp.requires_grad = True
Iter: 9, obj_tilts.requires_grad = False
Iter: 9, probe.requires_grad = True
Iter: 9, probe_pos_shifts.requires_grad = True
Done batch 1 with 32 indices ([2396, 16034, 5630, 15038, 12726]...) in 0.023 sec
Done batch 103 with 32 indices ([11660, 4469, 5218, 6943, 11931]...) in 0.024 sec
Done batch 205 with 32 indices ([5894, 6541, 7886, 9780, 12303]...) in 0.023 sec
Done batch 307 with 32 indices ([15033, 3447, 13625, 14479, 12291]...) in 0.026 sec
Done batch 409 with 32 indices ([7040, 5744, 8864, 7877, 15121]...) in 0.023 sec
Done batch 512 with 32 indices ([14436, 15584, 7167, 340, 3831]...) in 0.019 sec
Apply ortho pmode constraint at iter 9, relative pmode power = [0.286 0.23  0.223 0.171 0.066 0.024], probe int sum = 480.0106
Apply fix probe int constraint at iter 9, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 9
Apply z-direction Gaussian blur with std = 1 px on objp at iter 9
Apply hard positivity constraint on objp at iter 9
Iter: 9, Total Loss: 0.2487, loss_single: 0.2472, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0015, loss_simlar: 0.0000, in 11.916 sec

Iter: 10, obja.requires_grad = True
Iter: 10, objp.requires_grad = True
Iter: 10, obj_tilts.requires_grad = False
Iter: 10, probe.requires_grad = True
Iter: 10, probe_pos_shifts.requires_grad = True
Done batch 1 with 32 indices ([10200, 9838, 16232, 15584, 15572]...) in 0.019 sec
Done batch 103 with 32 indices ([16, 8693, 8665, 2972, 306]...) in 0.023 sec
Done batch 205 with 32 indices ([8632, 6405, 15068, 7128, 14271]...) in 0.021 sec
Done batch 307 with 32 indices ([9122, 16069, 8750, 13943, 786]...) in 0.023 sec
Done batch 409 with 32 indices ([10043, 5464, 8184, 2734, 14017]...) in 0.023 sec
Done batch 512 with 32 indices ([4183, 7202, 158, 6904, 7674]...) in 0.020 sec
Apply ortho pmode constraint at iter 10, relative pmode power = [0.278 0.23  0.224 0.186 0.057 0.024], probe int sum = 483.9357
Apply fix probe int constraint at iter 10, probe int sum = 450.4553
Apply z-direction Gaussian blur with std = 1 px on obja at iter 10
Apply z-direction Gaussian blur with std = 1 px on objp at iter 10
Apply hard positivity constraint on objp at iter 10
Iter: 10, Total Loss: 0.2483, loss_single: 0.2468, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0015, loss_simlar: 0.0000, in 11.482 sec

Saving summary figures for iter 10

### The PtyRADSolver is finished in 142.872 sec, or 2 min 22.872 sec ###
Mon Sep 23 23:23:36 EDT 2024
