/home/fs01/cl2696/workspace/ptyrad
c0001
Mon Sep 23 23:27:48 EDT 2024
params_path = params/demo/tBL_WSe2_reconstruct.yml
Mon Sep 23 23:27:49 2024       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 520.61.05    Driver Version: 520.61.05    CUDA Version: 11.8     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA A100-SXM...  On   | 00000000:C1:00.0 Off |                    0 |
| N/A   35C    P0    59W / 500W |      0MiB / 81920MiB |      0%      Default |
|                               |                      |             Disabled |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
PyTorch version:  2.4.1
CUDA available:  True
CUDA version:  11.8
CUDA device count:  1
CUDA device:  ['NVIDIA A100-SXM4-80GB']
ptyrad version: v0.1.0-beta2.5
### Loading params file ###
Success! Loaded .yml file path = params/demo/tBL_WSe2_reconstruct.yml
Detected kernel version 4.18.0, which is below the recommended minimum of 5.5.0; this can cause the process to hang. It is recommended to upgrade the kernel to the minimum version or higher.
Accelerator DataLoader split_batches = True

### Initializing Initializer ###

### Initializing cache ###
use_cached_obj   = False
use_cached_probe = False
use_cached_pos   = False

### Initializing exp_params ###
Input values are displayed below:
kv: 80
conv_angle: 24.9
Npix: 128
dx_spec: 0.1494
defocus: 0
c3: 0
z_distance: 1
Nlayer: 12
N_scans: 16384
N_scan_slow: 128
N_scan_fast: 128
scan_step_size: 0.429
scan_flipT: None
scan_affine: None
scan_rand_std: 0.15
omode_max: 1
omode_init_occu: {'occu_type': 'uniform', 'init_occu': None}
pmode_max: 6
pmode_init_pows: [0.02]
probe_permute: None
meas_permute: None
meas_reshape: None
meas_flipT: [1, 0, 0]
meas_crop: None
meas_resample: None
meas_add_source_size: None
meas_add_detector_blur: None
meas_add_poisson_noise: None

Derived values given input exp_params:
kv          = 80 kV
wavelength  = 0.0418 Ang
conv_angle  = 24.9 mrad
Npix        = 128 px
dk          = 0.0523 Ang^-1
kMax        = 3.3467 Ang^-1
alpha_max   = 139.7495 mrad
dx          = 0.1494 Ang, Nyquist-limited dmin = 2*dx = 0.2988 Ang
Rayleigh-limited resolution  = 1.0230 Ang (0.61*lambda/alpha for focused probe )
Real space probe extent = 19.1232 Ang

### Initializing measurements from 'raw' ###
Imported meausrements shape = (16384, 128, 128)
Imported meausrements int. statistics (min, mean, max) = (-30.8785, 1814.7064, 99441.8047)
Flipping measurements with [flipup, fliplr, transpose] = [1, 0, 0]
Minimum value of -30.8785 subtracted due to the positive px value constraint of measurements
Normalizing measurements so the averaged measurement has max intensity at 1
Radius of bright field disk             (rbf) = 11.0 px, suggested probe_mask_k radius (rbf*2/Npix) > 0.17
meausrements int. statistics (min, mean, max) = (0.0000, 0.0275, 1.4818)
measurements                      (N, Ky, Kx) = float32, (16384, 128, 128)

### Initializing probe from 'simu' ###
Use exp_params and default values instead for simulation
Start simulating STEM probe
kv          = 80 kV
wavelength  = 0.0418 Ang
conv_angle  = 24.9 mrad
Npix        = 128 px
dk          = 0.0523 Ang^-1
kMax        = 3.3467 Ang^-1
alpha_max   = 139.7447 mrad
dx          = 0.1494 Ang, Nyquist-limited dmin = 2*dx = 0.2988 Ang
Rayleigh-limited resolution  = 1.0229 Ang (0.61*lambda/alpha for focused probe )
Real space probe extent = 19.1232 Ang
Start making mixed-state STEM probe with 6 incoherent probe modes
Relative power of probe modes = [0.9  0.02 0.02 0.02 0.02 0.02]
probe                         (pmode, Ny, Nx) = complex64, (6, 128, 128)
sum(|probe_data|**2) = 450.46, while sum(meas)/len(meas) = 450.46

### Initializing probe pos from 'simu' ###
Simulating probe positions with dx_spec = 0.1494, scan_step_size = 0.429, N_scan_fast = 128, N_scan_slow = 128
Applying Gaussian distributed random displacement with std = 0.15 px to scan positions
crop_pos                                (N,2) = int16, (16384, 2)
crop_pos 1st and last px coords (y,x)         = ([50, 50], [414, 414])
crop_pos extent (Ang)                         = [54.6804 54.6804]
probe_pos_shifts                        (N,2) = float32, (16384, 2)

### Initializing obj from 'simu' ###
obj_shape is not provided, use exp_params, position range, and probe shape for estimated obj_shape (omode, Nz, Ny, Nx)
object                    (omode, Nz, Ny, Nx) = complex64, (1, 12, 592, 592)
object extent                 (Z, Y, X) (Ang) = [12.     88.4448 88.4448]

### Initializing omode_occu from 'uniform' ###
omode_occu                            (omode) = float32, (1,)

### Initializing H (Fresnel propagator) ###
Calculating H with probe_shape = [128 128], z_distance = 1.0000 Ang, lambd = 0.0418 Ang, extent = [19.1232 19.1232] Ang
H                                    (Ky, Kx) = complex64, (128, 128)

### Initializing obj tilts from = 'simu' ###
Initialized obj_tilts with init_tilts = [[0, 0]] (theta_y, theta_x) mrad
obj_tilts                              (N, 2) = float32, (1, 2)

### Checking consistency between input params with the initialized variables ###
Npix, DP measurements, probe, and H shapes are consistent as '128'
N_scans, len(meas), N_scan_slow*N_scan_fast, len(crop_pos), and len(probe_pos_shifts) are consistent as '16384'
obj.shape[0] is consistent with len(omode_occu) as '1'
obj.shape[1] is consistent with Nlayer as '12'
obj_tilts is consistent with either 1 or N_scans
Pass the consistency check of initialized variables, initialization is done!

### Initializing loss function ###

### Initializing constraint function ###

### Done initializing PtyRADSolver ###

### Starting the PtyRADSolver in reconstruct mode ###

### PtychoAD optimizable variables ###
obja            : torch.Size([1, 12, 592, 592])   , torch.float32   , device:cuda:0, grad:True , lr:5e-03
objp            : torch.Size([1, 12, 592, 592])   , torch.float32   , device:cuda:0, grad:True , lr:5e-03
obj_tilts       : torch.Size([1, 2])              , torch.float32   , device:cuda:0, grad:False, lr:0e+00
probe           : torch.Size([6, 128, 128, 2])    , torch.float32   , device:cuda:0, grad:True , lr:1e-03
probe_pos_shifts: torch.Size([16384, 2])          , torch.float32   , device:cuda:0, grad:True , lr:5e-03

### Optimizable variables statitsics ###
Total measurement values:    268,435,456                
Total optimizing variables:  8,640,512                
Overdetermined ratio:        31.07

### Model behavior ###
Obj preblur       : False
Tilt propagator   : False
Sub-px probe shift: True
Detector blur     : False

### Creating PyTorch 'Adam' optimizer with configs = {} ###

### Generating indices, batches, and output_path ###
d90 = 23.000 px or 3.436 Ang
Selecting indices with the 'full' mode 
Generated 16 'random' groups of ~1024 scan positions in 0.002 sec
The effective batch size (i.e., how many probe positions are simultaneously used for 1 update of ptychographic parameters) is batch_size * grad_accumulation = 1024 * 1 = 1024
output_path = 'output/tBL-WSe2//20240923_full_N16384_dp128_flipT100_random1024_p6_1obj_12slice_dz1_Adam_plr1e-3_oalr5e-3_oplr5e-3_slr5e-3_ozblur1_opos_sng1.0_spr0.1_altas_benchmark_normal' is generated!
Successfully copy 'tBL_WSe2_reconstruct.yml' to 'output/tBL-WSe2//20240923_full_N16384_dp128_flipT100_random1024_p6_1obj_12slice_dz1_Adam_plr1e-3_oalr5e-3_oplr5e-3_slr5e-3_ozblur1_opos_sng1.0_spr0.1_altas_benchmark_normal'
len(DataLoader) = num_batches = 16, DataLoader.batch_size = 1024

### Start the PtyRAD iterative ptycho reconstruction ###
Iter: 1, obja.requires_grad = True
Iter: 1, objp.requires_grad = True
Iter: 1, obj_tilts.requires_grad = False
Iter: 1, probe.requires_grad = True
Iter: 1, probe_pos_shifts.requires_grad = True
Done batch 1 with 1024 indices ([10465, 8014, 7184, 1884, 7524]...) in 0.555 sec
Done batch 4 with 1024 indices ([8240, 2667, 5688, 14519, 7817]...) in 0.503 sec
Done batch 7 with 1024 indices ([872, 14864, 15316, 5034, 4200]...) in 0.503 sec
Done batch 10 with 1024 indices ([11527, 7366, 11257, 2569, 4516]...) in 0.503 sec
Done batch 13 with 1024 indices ([3953, 6050, 2536, 6047, 14159]...) in 0.501 sec
Done batch 16 with 1024 indices ([5999, 1060, 6306, 5380, 15852]...) in 0.501 sec
Apply ortho pmode constraint at iter 1, relative pmode power = [0.877 0.028 0.025 0.025 0.023 0.022], probe int sum = 459.5217
Apply fix probe int constraint at iter 1, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 1
Apply z-direction Gaussian blur with std = 1 px on objp at iter 1
Apply hard positivity constraint on objp at iter 1
Iter: 1, Total Loss: 0.4864, loss_single: 0.4850, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0014, loss_simlar: 0.0000, in 10.404 sec

Iter: 2, obja.requires_grad = True
Iter: 2, objp.requires_grad = True
Iter: 2, obj_tilts.requires_grad = False
Iter: 2, probe.requires_grad = True
Iter: 2, probe_pos_shifts.requires_grad = True
Done batch 1 with 1024 indices ([9246, 10885, 15254, 8734, 5618]...) in 0.514 sec
Done batch 4 with 1024 indices ([11712, 15288, 12272, 9105, 8791]...) in 0.501 sec
Done batch 7 with 1024 indices ([16318, 12544, 12020, 10868, 687]...) in 0.503 sec
Done batch 10 with 1024 indices ([12329, 13117, 2645, 5411, 1150]...) in 0.504 sec
Done batch 13 with 1024 indices ([10432, 2911, 275, 8997, 9495]...) in 0.502 sec
Done batch 16 with 1024 indices ([11632, 9632, 15697, 14572, 946]...) in 0.502 sec
Apply ortho pmode constraint at iter 2, relative pmode power = [0.873 0.029 0.026 0.025 0.024 0.023], probe int sum = 454.7440
Apply fix probe int constraint at iter 2, probe int sum = 450.4553
Apply z-direction Gaussian blur with std = 1 px on obja at iter 2
Apply z-direction Gaussian blur with std = 1 px on objp at iter 2
Apply hard positivity constraint on objp at iter 2
Iter: 2, Total Loss: 0.3227, loss_single: 0.3218, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0009, loss_simlar: 0.0000, in 8.093 sec

Iter: 3, obja.requires_grad = True
Iter: 3, objp.requires_grad = True
Iter: 3, obj_tilts.requires_grad = False
Iter: 3, probe.requires_grad = True
Iter: 3, probe_pos_shifts.requires_grad = True
Done batch 1 with 1024 indices ([11489, 12192, 9293, 12584, 3832]...) in 0.502 sec
Done batch 4 with 1024 indices ([16108, 2109, 12121, 9992, 4687]...) in 0.502 sec
Done batch 7 with 1024 indices ([9500, 11057, 10403, 10970, 5926]...) in 0.503 sec
Done batch 10 with 1024 indices ([11289, 3349, 2824, 12610, 6807]...) in 0.501 sec
Done batch 13 with 1024 indices ([2485, 1596, 15928, 12429, 8608]...) in 0.504 sec
Done batch 16 with 1024 indices ([13659, 6203, 14470, 2937, 3545]...) in 0.502 sec
Apply ortho pmode constraint at iter 3, relative pmode power = [0.873 0.029 0.025 0.025 0.024 0.023], probe int sum = 451.7530
Apply fix probe int constraint at iter 3, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 3
Apply z-direction Gaussian blur with std = 1 px on objp at iter 3
Apply hard positivity constraint on objp at iter 3
Iter: 3, Total Loss: 0.2725, loss_single: 0.2717, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0008, loss_simlar: 0.0000, in 8.073 sec

Iter: 4, obja.requires_grad = True
Iter: 4, objp.requires_grad = True
Iter: 4, obj_tilts.requires_grad = False
Iter: 4, probe.requires_grad = True
Iter: 4, probe_pos_shifts.requires_grad = True
Done batch 1 with 1024 indices ([9350, 13317, 14404, 3003, 8097]...) in 0.502 sec
Done batch 4 with 1024 indices ([6449, 1574, 7130, 5799, 305]...) in 0.503 sec
Done batch 7 with 1024 indices ([8866, 15900, 5262, 6756, 9464]...) in 0.501 sec
Done batch 10 with 1024 indices ([8379, 8056, 11402, 10928, 15358]...) in 0.502 sec
Done batch 13 with 1024 indices ([7408, 6329, 3314, 9242, 5700]...) in 0.502 sec
Done batch 16 with 1024 indices ([1750, 6238, 15748, 595, 12318]...) in 0.503 sec
Apply ortho pmode constraint at iter 4, relative pmode power = [0.877 0.029 0.025 0.024 0.023 0.022], probe int sum = 450.3378
Apply fix probe int constraint at iter 4, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 4
Apply z-direction Gaussian blur with std = 1 px on objp at iter 4
Apply hard positivity constraint on objp at iter 4
Iter: 4, Total Loss: 0.2643, loss_single: 0.2635, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0008, loss_simlar: 0.0000, in 8.085 sec

Iter: 5, obja.requires_grad = True
Iter: 5, objp.requires_grad = True
Iter: 5, obj_tilts.requires_grad = False
Iter: 5, probe.requires_grad = True
Iter: 5, probe_pos_shifts.requires_grad = True
Done batch 1 with 1024 indices ([9321, 695, 13277, 11451, 10684]...) in 0.503 sec
Done batch 4 with 1024 indices ([2040, 16076, 15518, 10853, 8289]...) in 0.503 sec
Done batch 7 with 1024 indices ([2583, 5130, 12566, 9422, 7820]...) in 0.501 sec
Done batch 10 with 1024 indices ([16229, 9932, 12983, 4888, 11385]...) in 0.502 sec
Done batch 13 with 1024 indices ([6526, 9544, 8642, 9165, 9702]...) in 0.503 sec
Done batch 16 with 1024 indices ([5636, 6812, 6106, 11241, 13875]...) in 0.501 sec
Apply ortho pmode constraint at iter 5, relative pmode power = [0.875 0.03  0.025 0.024 0.024 0.022], probe int sum = 452.1568
Apply fix probe int constraint at iter 5, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 5
Apply z-direction Gaussian blur with std = 1 px on objp at iter 5
Apply hard positivity constraint on objp at iter 5
Iter: 5, Total Loss: 0.2629, loss_single: 0.2621, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0008, loss_simlar: 0.0000, in 8.078 sec

Saving summary figures for iter 5
Iter: 6, obja.requires_grad = True
Iter: 6, objp.requires_grad = True
Iter: 6, obj_tilts.requires_grad = False
Iter: 6, probe.requires_grad = True
Iter: 6, probe_pos_shifts.requires_grad = True
Done batch 1 with 1024 indices ([11724, 3407, 4602, 14022, 5745]...) in 0.512 sec
Done batch 4 with 1024 indices ([1653, 12388, 13501, 12500, 4237]...) in 0.501 sec
Done batch 7 with 1024 indices ([11740, 2416, 6848, 9935, 11215]...) in 0.503 sec
Done batch 10 with 1024 indices ([9296, 15205, 15955, 3755, 1258]...) in 0.502 sec
Done batch 13 with 1024 indices ([3097, 3490, 6826, 1996, 3316]...) in 0.504 sec
Done batch 16 with 1024 indices ([14513, 837, 5525, 4236, 13772]...) in 0.501 sec
Apply ortho pmode constraint at iter 6, relative pmode power = [0.874 0.03  0.025 0.024 0.024 0.023], probe int sum = 450.9000
Apply fix probe int constraint at iter 6, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 6
Apply z-direction Gaussian blur with std = 1 px on objp at iter 6
Apply hard positivity constraint on objp at iter 6
Iter: 6, Total Loss: 0.2612, loss_single: 0.2605, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0007, loss_simlar: 0.0000, in 8.091 sec

Iter: 7, obja.requires_grad = True
Iter: 7, objp.requires_grad = True
Iter: 7, obj_tilts.requires_grad = False
Iter: 7, probe.requires_grad = True
Iter: 7, probe_pos_shifts.requires_grad = True
Done batch 1 with 1024 indices ([1569, 13514, 6397, 13775, 5091]...) in 0.503 sec
Done batch 4 with 1024 indices ([12648, 4096, 7035, 14864, 13028]...) in 0.503 sec
Done batch 7 with 1024 indices ([6271, 1770, 8904, 15494, 5686]...) in 0.504 sec
Done batch 10 with 1024 indices ([13981, 4716, 10642, 10516, 4669]...) in 0.503 sec
Done batch 13 with 1024 indices ([6073, 12698, 609, 1174, 2651]...) in 0.503 sec
Done batch 16 with 1024 indices ([11499, 4950, 11150, 3916, 4366]...) in 0.502 sec
Apply ortho pmode constraint at iter 7, relative pmode power = [0.874 0.03  0.025 0.024 0.024 0.023], probe int sum = 450.7264
Apply fix probe int constraint at iter 7, probe int sum = 450.4553
Apply z-direction Gaussian blur with std = 1 px on obja at iter 7
Apply z-direction Gaussian blur with std = 1 px on objp at iter 7
Apply hard positivity constraint on objp at iter 7
Iter: 7, Total Loss: 0.2611, loss_single: 0.2603, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0007, loss_simlar: 0.0000, in 8.077 sec

Iter: 8, obja.requires_grad = True
Iter: 8, objp.requires_grad = True
Iter: 8, obj_tilts.requires_grad = False
Iter: 8, probe.requires_grad = True
Iter: 8, probe_pos_shifts.requires_grad = True
Done batch 1 with 1024 indices ([15993, 5084, 2170, 1444, 15285]...) in 0.501 sec
Done batch 4 with 1024 indices ([5524, 5037, 5850, 10933, 11144]...) in 0.502 sec
Done batch 7 with 1024 indices ([1635, 1248, 6646, 13370, 8351]...) in 0.502 sec
Done batch 10 with 1024 indices ([8446, 10617, 7855, 226, 10276]...) in 0.502 sec
Done batch 13 with 1024 indices ([867, 8665, 2423, 6994, 10334]...) in 0.501 sec
Done batch 16 with 1024 indices ([9800, 13981, 13712, 15436, 11047]...) in 0.501 sec
Apply ortho pmode constraint at iter 8, relative pmode power = [0.874 0.03  0.025 0.024 0.024 0.023], probe int sum = 450.4305
Apply fix probe int constraint at iter 8, probe int sum = 450.4553
Apply z-direction Gaussian blur with std = 1 px on obja at iter 8
Apply z-direction Gaussian blur with std = 1 px on objp at iter 8
Apply hard positivity constraint on objp at iter 8
Iter: 8, Total Loss: 0.2608, loss_single: 0.2600, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0007, loss_simlar: 0.0000, in 12.589 sec

Iter: 9, obja.requires_grad = True
Iter: 9, objp.requires_grad = True
Iter: 9, obj_tilts.requires_grad = False
Iter: 9, probe.requires_grad = True
Iter: 9, probe_pos_shifts.requires_grad = True
Done batch 1 with 1024 indices ([6032, 10271, 1860, 15276, 11833]...) in 0.501 sec
Done batch 4 with 1024 indices ([7281, 5161, 12949, 4458, 15417]...) in 0.503 sec
Done batch 7 with 1024 indices ([12375, 4308, 3597, 10893, 5911]...) in 0.503 sec
Done batch 10 with 1024 indices ([1279, 4708, 10918, 1581, 12979]...) in 0.502 sec
Done batch 13 with 1024 indices ([2708, 15897, 4911, 5453, 11899]...) in 0.501 sec
Done batch 16 with 1024 indices ([10375, 11233, 570, 8470, 13871]...) in 0.502 sec
Apply ortho pmode constraint at iter 9, relative pmode power = [0.873 0.031 0.025 0.024 0.024 0.023], probe int sum = 451.1284
Apply fix probe int constraint at iter 9, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 9
Apply z-direction Gaussian blur with std = 1 px on objp at iter 9
Apply hard positivity constraint on objp at iter 9
Iter: 9, Total Loss: 0.2603, loss_single: 0.2596, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0007, loss_simlar: 0.0000, in 8.083 sec

Iter: 10, obja.requires_grad = True
Iter: 10, objp.requires_grad = True
Iter: 10, obj_tilts.requires_grad = False
Iter: 10, probe.requires_grad = True
Iter: 10, probe_pos_shifts.requires_grad = True
Done batch 1 with 1024 indices ([12923, 8317, 7898, 11186, 6948]...) in 0.502 sec
Done batch 4 with 1024 indices ([2962, 3721, 3259, 9580, 1797]...) in 0.503 sec
Done batch 7 with 1024 indices ([7020, 11376, 14215, 118, 11997]...) in 0.503 sec
Done batch 10 with 1024 indices ([11448, 8225, 7491, 12983, 8995]...) in 0.501 sec
Done batch 13 with 1024 indices ([9612, 3766, 11782, 3004, 9440]...) in 0.503 sec
Done batch 16 with 1024 indices ([120, 14940, 3449, 2356, 13675]...) in 0.502 sec
Apply ortho pmode constraint at iter 10, relative pmode power = [0.872 0.031 0.025 0.024 0.024 0.023], probe int sum = 451.2082
Apply fix probe int constraint at iter 10, probe int sum = 450.4551
Apply z-direction Gaussian blur with std = 1 px on obja at iter 10
Apply z-direction Gaussian blur with std = 1 px on objp at iter 10
Apply hard positivity constraint on objp at iter 10
Iter: 10, Total Loss: 0.2600, loss_single: 0.2592, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0007, loss_simlar: 0.0000, in 8.080 sec

Saving summary figures for iter 10

### The PtyRADSolver is finished in 108.723 sec, or 1 min 48.723 sec ###
Mon Sep 23 23:30:04 EDT 2024
