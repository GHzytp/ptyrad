/home/fs01/cl2696/workspace/ptyrad
c0001
Mon Sep 23 23:29:48 EDT 2024
params_path = params/demo/tBL_WSe2_reconstruct.yml
Mon Sep 23 23:29:49 2024       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 520.61.05    Driver Version: 520.61.05    CUDA Version: 11.8     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA A100-SXM...  On   | 00000000:81:00.0 Off |                    0 |
| N/A   34C    P0    63W / 500W |      0MiB / 81920MiB |      0%      Default |
|                               |                      |             Disabled |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
PyTorch version:  2.4.1
CUDA available:  True
CUDA version:  11.8
CUDA device count:  1
CUDA device:  ['NVIDIA A100-SXM4-80GB']
ptyrad version: v0.1.0-beta2.5
### Loading params file ###
Success! Loaded .yml file path = params/demo/tBL_WSe2_reconstruct.yml
Detected kernel version 4.18.0, which is below the recommended minimum of 5.5.0; this can cause the process to hang. It is recommended to upgrade the kernel to the minimum version or higher.
Accelerator DataLoader split_batches = True

### Initializing Initializer ###

### Initializing cache ###
use_cached_obj   = False
use_cached_probe = False
use_cached_pos   = False

### Initializing exp_params ###
Input values are displayed below:
kv: 80
conv_angle: 24.9
Npix: 128
dx_spec: 0.1494
defocus: 0
c3: 0
z_distance: 1
Nlayer: 12
N_scans: 16384
N_scan_slow: 128
N_scan_fast: 128
scan_step_size: 0.429
scan_flipT: None
scan_affine: None
scan_rand_std: 0.15
omode_max: 1
omode_init_occu: {'occu_type': 'uniform', 'init_occu': None}
pmode_max: 6
pmode_init_pows: [0.02]
probe_permute: None
meas_permute: None
meas_reshape: None
meas_flipT: [1, 0, 0]
meas_crop: None
meas_resample: None
meas_add_source_size: None
meas_add_detector_blur: None
meas_add_poisson_noise: None

Derived values given input exp_params:
kv          = 80 kV
wavelength  = 0.0418 Ang
conv_angle  = 24.9 mrad
Npix        = 128 px
dk          = 0.0523 Ang^-1
kMax        = 3.3467 Ang^-1
alpha_max   = 139.7495 mrad
dx          = 0.1494 Ang, Nyquist-limited dmin = 2*dx = 0.2988 Ang
Rayleigh-limited resolution  = 1.0230 Ang (0.61*lambda/alpha for focused probe )
Real space probe extent = 19.1232 Ang

### Initializing measurements from 'raw' ###
Imported meausrements shape = (16384, 128, 128)
Imported meausrements int. statistics (min, mean, max) = (-30.8785, 1814.7064, 99441.8047)
Flipping measurements with [flipup, fliplr, transpose] = [1, 0, 0]
Minimum value of -30.8785 subtracted due to the positive px value constraint of measurements
Normalizing measurements so the averaged measurement has max intensity at 1
Radius of bright field disk             (rbf) = 11.0 px, suggested probe_mask_k radius (rbf*2/Npix) > 0.17
meausrements int. statistics (min, mean, max) = (0.0000, 0.0275, 1.4818)
measurements                      (N, Ky, Kx) = float32, (16384, 128, 128)

### Initializing probe from 'simu' ###
Use exp_params and default values instead for simulation
Start simulating STEM probe
kv          = 80 kV
wavelength  = 0.0418 Ang
conv_angle  = 24.9 mrad
Npix        = 128 px
dk          = 0.0523 Ang^-1
kMax        = 3.3467 Ang^-1
alpha_max   = 139.7447 mrad
dx          = 0.1494 Ang, Nyquist-limited dmin = 2*dx = 0.2988 Ang
Rayleigh-limited resolution  = 1.0229 Ang (0.61*lambda/alpha for focused probe )
Real space probe extent = 19.1232 Ang
Start making mixed-state STEM probe with 6 incoherent probe modes
Relative power of probe modes = [0.9  0.02 0.02 0.02 0.02 0.02]
probe                         (pmode, Ny, Nx) = complex64, (6, 128, 128)
sum(|probe_data|**2) = 450.46, while sum(meas)/len(meas) = 450.46

### Initializing probe pos from 'simu' ###
Simulating probe positions with dx_spec = 0.1494, scan_step_size = 0.429, N_scan_fast = 128, N_scan_slow = 128
Applying Gaussian distributed random displacement with std = 0.15 px to scan positions
crop_pos                                (N,2) = int16, (16384, 2)
crop_pos 1st and last px coords (y,x)         = ([49, 50], [414, 414])
crop_pos extent (Ang)                         = [54.6804 54.6804]
probe_pos_shifts                        (N,2) = float32, (16384, 2)

### Initializing obj from 'simu' ###
obj_shape is not provided, use exp_params, position range, and probe shape for estimated obj_shape (omode, Nz, Ny, Nx)
object                    (omode, Nz, Ny, Nx) = complex64, (1, 12, 592, 592)
object extent                 (Z, Y, X) (Ang) = [12.     88.4448 88.4448]

### Initializing omode_occu from 'uniform' ###
omode_occu                            (omode) = float32, (1,)

### Initializing H (Fresnel propagator) ###
Calculating H with probe_shape = [128 128], z_distance = 1.0000 Ang, lambd = 0.0418 Ang, extent = [19.1232 19.1232] Ang
H                                    (Ky, Kx) = complex64, (128, 128)

### Initializing obj tilts from = 'simu' ###
Initialized obj_tilts with init_tilts = [[0, 0]] (theta_y, theta_x) mrad
obj_tilts                              (N, 2) = float32, (1, 2)

### Checking consistency between input params with the initialized variables ###
Npix, DP measurements, probe, and H shapes are consistent as '128'
N_scans, len(meas), N_scan_slow*N_scan_fast, len(crop_pos), and len(probe_pos_shifts) are consistent as '16384'
obj.shape[0] is consistent with len(omode_occu) as '1'
obj.shape[1] is consistent with Nlayer as '12'
obj_tilts is consistent with either 1 or N_scans
Pass the consistency check of initialized variables, initialization is done!

### Initializing loss function ###

### Initializing constraint function ###

### Done initializing PtyRADSolver ###

### Starting the PtyRADSolver in reconstruct mode ###

### PtychoAD optimizable variables ###
obja            : torch.Size([1, 12, 592, 592])   , torch.float32   , device:cuda:0, grad:True , lr:5e-03
objp            : torch.Size([1, 12, 592, 592])   , torch.float32   , device:cuda:0, grad:True , lr:5e-03
obj_tilts       : torch.Size([1, 2])              , torch.float32   , device:cuda:0, grad:False, lr:0e+00
probe           : torch.Size([6, 128, 128, 2])    , torch.float32   , device:cuda:0, grad:True , lr:1e-03
probe_pos_shifts: torch.Size([16384, 2])          , torch.float32   , device:cuda:0, grad:True , lr:5e-03

### Optimizable variables statitsics ###
Total measurement values:    268,435,456                
Total optimizing variables:  8,640,512                
Overdetermined ratio:        31.07

### Model behavior ###
Obj preblur       : False
Tilt propagator   : False
Sub-px probe shift: True
Detector blur     : False

### Creating PyTorch 'Adam' optimizer with configs = {} ###

### Generating indices, batches, and output_path ###
d90 = 23.000 px or 3.436 Ang
Selecting indices with the 'full' mode 
Generated 8 'random' groups of ~2048 scan positions in 0.000 sec
The effective batch size (i.e., how many probe positions are simultaneously used for 1 update of ptychographic parameters) is batch_size * grad_accumulation = 2048 * 1 = 2048
output_path = 'output/tBL-WSe2//20240923_full_N16384_dp128_flipT100_random2048_p6_1obj_12slice_dz1_Adam_plr1e-3_oalr5e-3_oplr5e-3_slr5e-3_ozblur1_opos_sng1.0_spr0.1_altas_benchmark_normal' is generated!
Successfully copy 'tBL_WSe2_reconstruct.yml' to 'output/tBL-WSe2//20240923_full_N16384_dp128_flipT100_random2048_p6_1obj_12slice_dz1_Adam_plr1e-3_oalr5e-3_oplr5e-3_slr5e-3_ozblur1_opos_sng1.0_spr0.1_altas_benchmark_normal'
len(DataLoader) = num_batches = 8, DataLoader.batch_size = 2048

### Start the PtyRAD iterative ptycho reconstruction ###
Iter: 1, obja.requires_grad = True
Iter: 1, objp.requires_grad = True
Iter: 1, obj_tilts.requires_grad = False
Iter: 1, probe.requires_grad = True
Iter: 1, probe_pos_shifts.requires_grad = True
Done batch 1 with 2048 indices ([14262, 14896, 5610, 5369, 2236]...) in 1.040 sec
Done batch 2 with 2048 indices ([4456, 11264, 7817, 14046, 14670]...) in 0.998 sec
Done batch 3 with 2048 indices ([14724, 12264, 1163, 8426, 10053]...) in 0.995 sec
Done batch 5 with 2048 indices ([2910, 3560, 13246, 5629, 13013]...) in 0.994 sec
Done batch 6 with 2048 indices ([14200, 6891, 12673, 6852, 8165]...) in 0.997 sec
Done batch 8 with 2048 indices ([12184, 15569, 8995, 13031, 3758]...) in 0.996 sec
Apply ortho pmode constraint at iter 1, relative pmode power = [0.888 0.024 0.023 0.023 0.021 0.021], probe int sum = 456.4565
Apply fix probe int constraint at iter 1, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 1
Apply z-direction Gaussian blur with std = 1 px on objp at iter 1
Apply hard positivity constraint on objp at iter 1
Iter: 1, Total Loss: 0.5510, loss_single: 0.5500, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0010, loss_simlar: 0.0000, in 15.465 sec

Iter: 2, obja.requires_grad = True
Iter: 2, objp.requires_grad = True
Iter: 2, obj_tilts.requires_grad = False
Iter: 2, probe.requires_grad = True
Iter: 2, probe_pos_shifts.requires_grad = True
Done batch 1 with 2048 indices ([6542, 13996, 6804, 3232, 15726]...) in 1.008 sec
Done batch 2 with 2048 indices ([14002, 10465, 2301, 3100, 4699]...) in 0.999 sec
Done batch 3 with 2048 indices ([13760, 842, 3671, 9839, 4423]...) in 0.996 sec
Done batch 5 with 2048 indices ([6995, 5031, 3691, 11371, 13884]...) in 0.995 sec
Done batch 6 with 2048 indices ([16274, 3083, 9244, 14448, 8942]...) in 0.995 sec
Done batch 8 with 2048 indices ([645, 6799, 15101, 1494, 14199]...) in 0.994 sec
Apply ortho pmode constraint at iter 2, relative pmode power = [0.885 0.027 0.023 0.022 0.022 0.021], probe int sum = 450.2654
Apply fix probe int constraint at iter 2, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 2
Apply z-direction Gaussian blur with std = 1 px on objp at iter 2
Apply hard positivity constraint on objp at iter 2
Iter: 2, Total Loss: 0.3941, loss_single: 0.3930, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0011, loss_simlar: 0.0000, in 8.006 sec

Iter: 3, obja.requires_grad = True
Iter: 3, objp.requires_grad = True
Iter: 3, obj_tilts.requires_grad = False
Iter: 3, probe.requires_grad = True
Iter: 3, probe_pos_shifts.requires_grad = True
Done batch 1 with 2048 indices ([12659, 11626, 5108, 6654, 445]...) in 0.994 sec
Done batch 2 with 2048 indices ([4751, 4771, 6455, 13857, 5164]...) in 0.996 sec
Done batch 3 with 2048 indices ([14553, 13298, 16236, 9525, 3765]...) in 0.995 sec
Done batch 5 with 2048 indices ([12419, 9793, 10646, 3812, 14668]...) in 0.994 sec
Done batch 6 with 2048 indices ([1391, 13537, 1397, 14269, 6467]...) in 0.995 sec
Done batch 8 with 2048 indices ([14393, 795, 6087, 10029, 9390]...) in 0.998 sec
Apply ortho pmode constraint at iter 3, relative pmode power = [0.865 0.029 0.029 0.029 0.025 0.022], probe int sum = 462.7181
Apply fix probe int constraint at iter 3, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 3
Apply z-direction Gaussian blur with std = 1 px on objp at iter 3
Apply hard positivity constraint on objp at iter 3
Iter: 3, Total Loss: 0.3219, loss_single: 0.3208, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0010, loss_simlar: 0.0000, in 7.995 sec

Iter: 4, obja.requires_grad = True
Iter: 4, objp.requires_grad = True
Iter: 4, obj_tilts.requires_grad = False
Iter: 4, probe.requires_grad = True
Iter: 4, probe_pos_shifts.requires_grad = True
Done batch 1 with 2048 indices ([1085, 308, 7224, 5543, 7700]...) in 0.996 sec
Done batch 2 with 2048 indices ([5234, 1501, 15565, 1110, 10464]...) in 0.996 sec
Done batch 3 with 2048 indices ([16304, 5905, 1208, 7938, 12451]...) in 0.997 sec
Done batch 5 with 2048 indices ([11765, 4955, 1568, 6971, 3304]...) in 0.996 sec
Done batch 6 with 2048 indices ([10886, 12637, 9022, 14551, 11148]...) in 0.998 sec
Done batch 8 with 2048 indices ([1369, 14581, 9733, 10348, 9852]...) in 0.995 sec
Apply ortho pmode constraint at iter 4, relative pmode power = [0.849 0.036 0.036 0.03  0.026 0.022], probe int sum = 460.1377
Apply fix probe int constraint at iter 4, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 4
Apply z-direction Gaussian blur with std = 1 px on objp at iter 4
Apply hard positivity constraint on objp at iter 4
Iter: 4, Total Loss: 0.3028, loss_single: 0.3018, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0011, loss_simlar: 0.0000, in 8.017 sec

Iter: 5, obja.requires_grad = True
Iter: 5, objp.requires_grad = True
Iter: 5, obj_tilts.requires_grad = False
Iter: 5, probe.requires_grad = True
Iter: 5, probe_pos_shifts.requires_grad = True
Done batch 1 with 2048 indices ([10575, 14627, 7945, 8486, 4203]...) in 0.996 sec
Done batch 2 with 2048 indices ([2699, 15689, 5673, 798, 5671]...) in 0.995 sec
Done batch 3 with 2048 indices ([14787, 15000, 7797, 5393, 11421]...) in 0.997 sec
Done batch 5 with 2048 indices ([346, 2358, 7516, 4326, 14614]...) in 0.996 sec
Done batch 6 with 2048 indices ([4572, 11203, 9065, 8682, 10863]...) in 0.996 sec
Done batch 8 with 2048 indices ([14622, 5038, 12790, 6058, 11910]...) in 0.996 sec
Apply ortho pmode constraint at iter 5, relative pmode power = [0.837 0.043 0.043 0.029 0.026 0.022], probe int sum = 459.6069
Apply fix probe int constraint at iter 5, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 5
Apply z-direction Gaussian blur with std = 1 px on objp at iter 5
Apply hard positivity constraint on objp at iter 5
Iter: 5, Total Loss: 0.2973, loss_single: 0.2962, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0010, loss_simlar: 0.0000, in 8.002 sec

Saving summary figures for iter 5
Iter: 6, obja.requires_grad = True
Iter: 6, objp.requires_grad = True
Iter: 6, obj_tilts.requires_grad = False
Iter: 6, probe.requires_grad = True
Iter: 6, probe_pos_shifts.requires_grad = True
Done batch 1 with 2048 indices ([4267, 13553, 16066, 8211, 8059]...) in 1.009 sec
Done batch 2 with 2048 indices ([15777, 1065, 7875, 427, 1328]...) in 0.995 sec
Done batch 3 with 2048 indices ([302, 5662, 10101, 8411, 7467]...) in 0.997 sec
Done batch 5 with 2048 indices ([3631, 13826, 7123, 4095, 9283]...) in 0.996 sec
Done batch 6 with 2048 indices ([10502, 12296, 5091, 62, 3727]...) in 0.996 sec
Done batch 8 with 2048 indices ([9165, 11161, 11723, 4597, 15]...) in 0.998 sec
Apply ortho pmode constraint at iter 6, relative pmode power = [0.845 0.04  0.039 0.029 0.025 0.021], probe int sum = 449.2770
Apply fix probe int constraint at iter 6, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 6
Apply z-direction Gaussian blur with std = 1 px on objp at iter 6
Apply hard positivity constraint on objp at iter 6
Iter: 6, Total Loss: 0.2957, loss_single: 0.2947, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0010, loss_simlar: 0.0000, in 8.028 sec

Iter: 7, obja.requires_grad = True
Iter: 7, objp.requires_grad = True
Iter: 7, obj_tilts.requires_grad = False
Iter: 7, probe.requires_grad = True
Iter: 7, probe_pos_shifts.requires_grad = True
Done batch 1 with 2048 indices ([8205, 10291, 6730, 16215, 8961]...) in 0.996 sec
Done batch 2 with 2048 indices ([8692, 15494, 5810, 1482, 13760]...) in 0.995 sec
Done batch 3 with 2048 indices ([3725, 13212, 14092, 5583, 2527]...) in 0.995 sec
Done batch 5 with 2048 indices ([7634, 10938, 9858, 14881, 902]...) in 0.997 sec
Done batch 6 with 2048 indices ([4614, 761, 4115, 6652, 7311]...) in 0.996 sec
Done batch 8 with 2048 indices ([3587, 2139, 6332, 16312, 13902]...) in 0.994 sec
Apply ortho pmode constraint at iter 7, relative pmode power = [0.863 0.031 0.03  0.03  0.025 0.021], probe int sum = 442.6992
Apply fix probe int constraint at iter 7, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 7
Apply z-direction Gaussian blur with std = 1 px on objp at iter 7
Apply hard positivity constraint on objp at iter 7
Iter: 7, Total Loss: 0.2733, loss_single: 0.2723, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0010, loss_simlar: 0.0000, in 8.007 sec

Iter: 8, obja.requires_grad = True
Iter: 8, objp.requires_grad = True
Iter: 8, obj_tilts.requires_grad = False
Iter: 8, probe.requires_grad = True
Iter: 8, probe_pos_shifts.requires_grad = True
Done batch 1 with 2048 indices ([14549, 14935, 12927, 6534, 14896]...) in 0.994 sec
Done batch 2 with 2048 indices ([3015, 1927, 767, 10343, 14952]...) in 0.995 sec
Done batch 3 with 2048 indices ([3154, 2834, 6734, 16374, 16171]...) in 0.996 sec
Done batch 5 with 2048 indices ([3647, 7231, 15657, 1623, 12551]...) in 0.996 sec
Done batch 6 with 2048 indices ([3131, 2526, 7916, 15984, 1597]...) in 0.995 sec
Done batch 8 with 2048 indices ([16075, 7281, 4828, 12651, 10668]...) in 0.994 sec
Apply ortho pmode constraint at iter 8, relative pmode power = [0.871 0.03  0.026 0.026 0.025 0.022], probe int sum = 446.9856
Apply fix probe int constraint at iter 8, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 8
Apply z-direction Gaussian blur with std = 1 px on objp at iter 8
Apply hard positivity constraint on objp at iter 8
Iter: 8, Total Loss: 0.2566, loss_single: 0.2557, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0009, loss_simlar: 0.0000, in 7.989 sec

Iter: 9, obja.requires_grad = True
Iter: 9, objp.requires_grad = True
Iter: 9, obj_tilts.requires_grad = False
Iter: 9, probe.requires_grad = True
Iter: 9, probe_pos_shifts.requires_grad = True
Done batch 1 with 2048 indices ([2334, 6141, 171, 1233, 3614]...) in 0.994 sec
Done batch 2 with 2048 indices ([10204, 5582, 11184, 10793, 11330]...) in 0.995 sec
Done batch 3 with 2048 indices ([7736, 13616, 14869, 13755, 5589]...) in 0.996 sec
Done batch 5 with 2048 indices ([6596, 9597, 7349, 2640, 6114]...) in 0.997 sec
Done batch 6 with 2048 indices ([3856, 10661, 11725, 13787, 8947]...) in 0.996 sec
Done batch 8 with 2048 indices ([10454, 12303, 11832, 15907, 1166]...) in 0.997 sec
Apply ortho pmode constraint at iter 9, relative pmode power = [0.869 0.031 0.027 0.026 0.025 0.022], probe int sum = 452.4507
Apply fix probe int constraint at iter 9, probe int sum = 450.4553
Apply z-direction Gaussian blur with std = 1 px on obja at iter 9
Apply z-direction Gaussian blur with std = 1 px on objp at iter 9
Apply hard positivity constraint on objp at iter 9
Iter: 9, Total Loss: 0.2555, loss_single: 0.2546, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0009, loss_simlar: 0.0000, in 8.004 sec

Iter: 10, obja.requires_grad = True
Iter: 10, objp.requires_grad = True
Iter: 10, obj_tilts.requires_grad = False
Iter: 10, probe.requires_grad = True
Iter: 10, probe_pos_shifts.requires_grad = True
Done batch 1 with 2048 indices ([4341, 7142, 3298, 15966, 11343]...) in 0.994 sec
Done batch 2 with 2048 indices ([14743, 12923, 14550, 11899, 3742]...) in 0.994 sec
Done batch 3 with 2048 indices ([5419, 555, 10945, 8123, 14288]...) in 0.996 sec
Done batch 5 with 2048 indices ([11567, 5680, 8781, 2424, 2972]...) in 0.994 sec
Done batch 6 with 2048 indices ([3764, 14154, 12504, 15279, 2951]...) in 0.994 sec
Done batch 8 with 2048 indices ([1148, 4486, 1984, 756, 12524]...) in 0.996 sec
Apply ortho pmode constraint at iter 10, relative pmode power = [0.868 0.031 0.027 0.027 0.025 0.022], probe int sum = 452.1204
Apply fix probe int constraint at iter 10, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 10
Apply z-direction Gaussian blur with std = 1 px on objp at iter 10
Apply hard positivity constraint on objp at iter 10
Iter: 10, Total Loss: 0.2540, loss_single: 0.2532, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0008, loss_simlar: 0.0000, in 7.987 sec

Saving summary figures for iter 10

### The PtyRADSolver is finished in 107.029 sec, or 1 min 47.029 sec ###
Mon Sep 23 23:31:51 EDT 2024
