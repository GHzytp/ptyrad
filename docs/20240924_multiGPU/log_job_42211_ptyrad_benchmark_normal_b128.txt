/home/fs01/cl2696/workspace/ptyrad
c0001
Mon Sep 23 23:23:48 EDT 2024
params_path = params/demo/tBL_WSe2_reconstruct.yml
Mon Sep 23 23:23:48 2024       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 520.61.05    Driver Version: 520.61.05    CUDA Version: 11.8     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA A100-SXM...  On   | 00000000:81:00.0 Off |                    0 |
| N/A   36C    P0    63W / 500W |      0MiB / 81920MiB |      0%      Default |
|                               |                      |             Disabled |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
PyTorch version:  2.4.1
CUDA available:  True
CUDA version:  11.8
CUDA device count:  1
CUDA device:  ['NVIDIA A100-SXM4-80GB']
ptyrad version: v0.1.0-beta2.5
### Loading params file ###
Success! Loaded .yml file path = params/demo/tBL_WSe2_reconstruct.yml
Detected kernel version 4.18.0, which is below the recommended minimum of 5.5.0; this can cause the process to hang. It is recommended to upgrade the kernel to the minimum version or higher.
Accelerator DataLoader split_batches = True

### Initializing Initializer ###

### Initializing cache ###
use_cached_obj   = False
use_cached_probe = False
use_cached_pos   = False

### Initializing exp_params ###
Input values are displayed below:
kv: 80
conv_angle: 24.9
Npix: 128
dx_spec: 0.1494
defocus: 0
c3: 0
z_distance: 1
Nlayer: 12
N_scans: 16384
N_scan_slow: 128
N_scan_fast: 128
scan_step_size: 0.429
scan_flipT: None
scan_affine: None
scan_rand_std: 0.15
omode_max: 1
omode_init_occu: {'occu_type': 'uniform', 'init_occu': None}
pmode_max: 6
pmode_init_pows: [0.02]
probe_permute: None
meas_permute: None
meas_reshape: None
meas_flipT: [1, 0, 0]
meas_crop: None
meas_resample: None
meas_add_source_size: None
meas_add_detector_blur: None
meas_add_poisson_noise: None

Derived values given input exp_params:
kv          = 80 kV
wavelength  = 0.0418 Ang
conv_angle  = 24.9 mrad
Npix        = 128 px
dk          = 0.0523 Ang^-1
kMax        = 3.3467 Ang^-1
alpha_max   = 139.7495 mrad
dx          = 0.1494 Ang, Nyquist-limited dmin = 2*dx = 0.2988 Ang
Rayleigh-limited resolution  = 1.0230 Ang (0.61*lambda/alpha for focused probe )
Real space probe extent = 19.1232 Ang

### Initializing measurements from 'raw' ###
Imported meausrements shape = (16384, 128, 128)
Imported meausrements int. statistics (min, mean, max) = (-30.8785, 1814.7064, 99441.8047)
Flipping measurements with [flipup, fliplr, transpose] = [1, 0, 0]
Minimum value of -30.8785 subtracted due to the positive px value constraint of measurements
Normalizing measurements so the averaged measurement has max intensity at 1
Radius of bright field disk             (rbf) = 11.0 px, suggested probe_mask_k radius (rbf*2/Npix) > 0.17
meausrements int. statistics (min, mean, max) = (0.0000, 0.0275, 1.4818)
measurements                      (N, Ky, Kx) = float32, (16384, 128, 128)

### Initializing probe from 'simu' ###
Use exp_params and default values instead for simulation
Start simulating STEM probe
kv          = 80 kV
wavelength  = 0.0418 Ang
conv_angle  = 24.9 mrad
Npix        = 128 px
dk          = 0.0523 Ang^-1
kMax        = 3.3467 Ang^-1
alpha_max   = 139.7447 mrad
dx          = 0.1494 Ang, Nyquist-limited dmin = 2*dx = 0.2988 Ang
Rayleigh-limited resolution  = 1.0229 Ang (0.61*lambda/alpha for focused probe )
Real space probe extent = 19.1232 Ang
Start making mixed-state STEM probe with 6 incoherent probe modes
Relative power of probe modes = [0.9  0.02 0.02 0.02 0.02 0.02]
probe                         (pmode, Ny, Nx) = complex64, (6, 128, 128)
sum(|probe_data|**2) = 450.46, while sum(meas)/len(meas) = 450.46

### Initializing probe pos from 'simu' ###
Simulating probe positions with dx_spec = 0.1494, scan_step_size = 0.429, N_scan_fast = 128, N_scan_slow = 128
Applying Gaussian distributed random displacement with std = 0.15 px to scan positions
crop_pos                                (N,2) = int16, (16384, 2)
crop_pos 1st and last px coords (y,x)         = ([50, 50], [414, 414])
crop_pos extent (Ang)                         = [54.6804 54.6804]
probe_pos_shifts                        (N,2) = float32, (16384, 2)

### Initializing obj from 'simu' ###
obj_shape is not provided, use exp_params, position range, and probe shape for estimated obj_shape (omode, Nz, Ny, Nx)
object                    (omode, Nz, Ny, Nx) = complex64, (1, 12, 592, 592)
object extent                 (Z, Y, X) (Ang) = [12.     88.4448 88.4448]

### Initializing omode_occu from 'uniform' ###
omode_occu                            (omode) = float32, (1,)

### Initializing H (Fresnel propagator) ###
Calculating H with probe_shape = [128 128], z_distance = 1.0000 Ang, lambd = 0.0418 Ang, extent = [19.1232 19.1232] Ang
H                                    (Ky, Kx) = complex64, (128, 128)

### Initializing obj tilts from = 'simu' ###
Initialized obj_tilts with init_tilts = [[0, 0]] (theta_y, theta_x) mrad
obj_tilts                              (N, 2) = float32, (1, 2)

### Checking consistency between input params with the initialized variables ###
Npix, DP measurements, probe, and H shapes are consistent as '128'
N_scans, len(meas), N_scan_slow*N_scan_fast, len(crop_pos), and len(probe_pos_shifts) are consistent as '16384'
obj.shape[0] is consistent with len(omode_occu) as '1'
obj.shape[1] is consistent with Nlayer as '12'
obj_tilts is consistent with either 1 or N_scans
Pass the consistency check of initialized variables, initialization is done!

### Initializing loss function ###

### Initializing constraint function ###

### Done initializing PtyRADSolver ###

### Starting the PtyRADSolver in reconstruct mode ###

### PtychoAD optimizable variables ###
obja            : torch.Size([1, 12, 592, 592])   , torch.float32   , device:cuda:0, grad:True , lr:5e-03
objp            : torch.Size([1, 12, 592, 592])   , torch.float32   , device:cuda:0, grad:True , lr:5e-03
obj_tilts       : torch.Size([1, 2])              , torch.float32   , device:cuda:0, grad:False, lr:0e+00
probe           : torch.Size([6, 128, 128, 2])    , torch.float32   , device:cuda:0, grad:True , lr:1e-03
probe_pos_shifts: torch.Size([16384, 2])          , torch.float32   , device:cuda:0, grad:True , lr:5e-03

### Optimizable variables statitsics ###
Total measurement values:    268,435,456                
Total optimizing variables:  8,640,512                
Overdetermined ratio:        31.07

### Model behavior ###
Obj preblur       : False
Tilt propagator   : False
Sub-px probe shift: True
Detector blur     : False

### Creating PyTorch 'Adam' optimizer with configs = {} ###

### Generating indices, batches, and output_path ###
d90 = 23.000 px or 3.436 Ang
Selecting indices with the 'full' mode 
Generated 128 'random' groups of ~128 scan positions in 0.003 sec
The effective batch size (i.e., how many probe positions are simultaneously used for 1 update of ptychographic parameters) is batch_size * grad_accumulation = 128 * 1 = 128
output_path = 'output/tBL-WSe2//20240923_full_N16384_dp128_flipT100_random128_p6_1obj_12slice_dz1_Adam_plr1e-3_oalr5e-3_oplr5e-3_slr5e-3_ozblur1_opos_sng1.0_spr0.1_altas_benchmark_normal' is generated!
Successfully copy 'tBL_WSe2_reconstruct.yml' to 'output/tBL-WSe2//20240923_full_N16384_dp128_flipT100_random128_p6_1obj_12slice_dz1_Adam_plr1e-3_oalr5e-3_oplr5e-3_slr5e-3_ozblur1_opos_sng1.0_spr0.1_altas_benchmark_normal'
len(DataLoader) = num_batches = 128, DataLoader.batch_size = 128

### Start the PtyRAD iterative ptycho reconstruction ###
Iter: 1, obja.requires_grad = True
Iter: 1, objp.requires_grad = True
Iter: 1, obj_tilts.requires_grad = False
Iter: 1, probe.requires_grad = True
Iter: 1, probe_pos_shifts.requires_grad = True
Done batch 1 with 128 indices ([14841, 9162, 2045, 9574, 9195]...) in 0.125 sec
Done batch 26 with 128 indices ([12274, 13055, 831, 12510, 7032]...) in 0.068 sec
Done batch 51 with 128 indices ([12388, 12869, 14156, 12818, 5135]...) in 0.070 sec
Done batch 77 with 128 indices ([12705, 5772, 11477, 14941, 7401]...) in 0.068 sec
Done batch 102 with 128 indices ([1380, 10581, 6812, 4977, 15292]...) in 0.069 sec
Done batch 128 with 128 indices ([1035, 7420, 2927, 13955, 2449]...) in 0.070 sec
Apply ortho pmode constraint at iter 1, relative pmode power = [0.851 0.036 0.033 0.028 0.027 0.024], probe int sum = 462.5506
Apply fix probe int constraint at iter 1, probe int sum = 450.4553
Apply z-direction Gaussian blur with std = 1 px on obja at iter 1
Apply z-direction Gaussian blur with std = 1 px on objp at iter 1
Apply hard positivity constraint on objp at iter 1
Iter: 1, Total Loss: 0.3769, loss_single: 0.3755, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0014, loss_simlar: 0.0000, in 11.785 sec

Iter: 2, obja.requires_grad = True
Iter: 2, objp.requires_grad = True
Iter: 2, obj_tilts.requires_grad = False
Iter: 2, probe.requires_grad = True
Iter: 2, probe_pos_shifts.requires_grad = True
Done batch 1 with 128 indices ([3151, 12067, 2888, 4387, 6748]...) in 0.074 sec
Done batch 26 with 128 indices ([2445, 8195, 9930, 1606, 9492]...) in 0.070 sec
Done batch 51 with 128 indices ([7396, 11930, 348, 7902, 14035]...) in 0.067 sec
Done batch 77 with 128 indices ([2701, 15674, 9742, 13453, 4268]...) in 0.071 sec
Done batch 102 with 128 indices ([3973, 38, 12466, 799, 3631]...) in 0.072 sec
Done batch 128 with 128 indices ([5085, 14653, 5481, 2919, 8262]...) in 0.070 sec
Apply ortho pmode constraint at iter 2, relative pmode power = [0.718 0.077 0.061 0.055 0.048 0.041], probe int sum = 509.6475
Apply fix probe int constraint at iter 2, probe int sum = 450.4553
Apply z-direction Gaussian blur with std = 1 px on obja at iter 2
Apply z-direction Gaussian blur with std = 1 px on objp at iter 2
Apply hard positivity constraint on objp at iter 2
Iter: 2, Total Loss: 0.3350, loss_single: 0.3338, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0011, loss_simlar: 0.0000, in 9.099 sec

Iter: 3, obja.requires_grad = True
Iter: 3, objp.requires_grad = True
Iter: 3, obj_tilts.requires_grad = False
Iter: 3, probe.requires_grad = True
Iter: 3, probe_pos_shifts.requires_grad = True
Done batch 1 with 128 indices ([5278, 13209, 5762, 8951, 10209]...) in 0.070 sec
Done batch 26 with 128 indices ([132, 298, 489, 7477, 574]...) in 0.071 sec
Done batch 51 with 128 indices ([2861, 15265, 1190, 4672, 13076]...) in 0.071 sec
Done batch 77 with 128 indices ([12762, 15455, 4400, 8443, 15784]...) in 0.069 sec
Done batch 102 with 128 indices ([4501, 11150, 3678, 12764, 7571]...) in 0.068 sec
Done batch 128 with 128 indices ([8869, 1885, 6341, 8826, 9617]...) in 0.068 sec
Apply ortho pmode constraint at iter 3, relative pmode power = [0.58  0.115 0.088 0.079 0.074 0.065], probe int sum = 553.9724
Apply fix probe int constraint at iter 3, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 3
Apply z-direction Gaussian blur with std = 1 px on objp at iter 3
Apply hard positivity constraint on objp at iter 3
Iter: 3, Total Loss: 0.2871, loss_single: 0.2860, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0012, loss_simlar: 0.0000, in 9.028 sec

Iter: 4, obja.requires_grad = True
Iter: 4, objp.requires_grad = True
Iter: 4, obj_tilts.requires_grad = False
Iter: 4, probe.requires_grad = True
Iter: 4, probe_pos_shifts.requires_grad = True
Done batch 1 with 128 indices ([9992, 11222, 6474, 14056, 14533]...) in 0.070 sec
Done batch 26 with 128 indices ([15840, 9248, 7578, 3175, 8204]...) in 0.067 sec
Done batch 51 with 128 indices ([15380, 898, 7049, 4128, 13419]...) in 0.067 sec
Done batch 77 with 128 indices ([7786, 13013, 14420, 3092, 4566]...) in 0.071 sec
Done batch 102 with 128 indices ([2116, 15225, 16363, 6479, 5822]...) in 0.070 sec
Done batch 128 with 128 indices ([12280, 1701, 11266, 12189, 2951]...) in 0.069 sec
Apply ortho pmode constraint at iter 4, relative pmode power = [0.496 0.138 0.102 0.093 0.088 0.082], probe int sum = 540.1442
Apply fix probe int constraint at iter 4, probe int sum = 450.4553
Apply z-direction Gaussian blur with std = 1 px on obja at iter 4
Apply z-direction Gaussian blur with std = 1 px on objp at iter 4
Apply hard positivity constraint on objp at iter 4
Iter: 4, Total Loss: 0.2660, loss_single: 0.2649, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0011, loss_simlar: 0.0000, in 9.026 sec

Iter: 5, obja.requires_grad = True
Iter: 5, objp.requires_grad = True
Iter: 5, obj_tilts.requires_grad = False
Iter: 5, probe.requires_grad = True
Iter: 5, probe_pos_shifts.requires_grad = True
Done batch 1 with 128 indices ([1553, 3560, 15681, 1382, 8476]...) in 0.069 sec
Done batch 26 with 128 indices ([6914, 11740, 5457, 2739, 1763]...) in 0.070 sec
Done batch 51 with 128 indices ([13861, 1729, 8898, 4567, 2901]...) in 0.067 sec
Done batch 77 with 128 indices ([12818, 15862, 8750, 10666, 8975]...) in 0.068 sec
Done batch 102 with 128 indices ([10776, 6714, 7504, 14000, 5788]...) in 0.068 sec
Done batch 128 with 128 indices ([8325, 11659, 8782, 5911, 8045]...) in 0.070 sec
Apply ortho pmode constraint at iter 5, relative pmode power = [0.461 0.155 0.104 0.096 0.095 0.09 ], probe int sum = 502.1464
Apply fix probe int constraint at iter 5, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 5
Apply z-direction Gaussian blur with std = 1 px on objp at iter 5
Apply hard positivity constraint on objp at iter 5
Iter: 5, Total Loss: 0.2535, loss_single: 0.2524, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0011, loss_simlar: 0.0000, in 8.971 sec

Saving summary figures for iter 5
Iter: 6, obja.requires_grad = True
Iter: 6, objp.requires_grad = True
Iter: 6, obj_tilts.requires_grad = False
Iter: 6, probe.requires_grad = True
Iter: 6, probe_pos_shifts.requires_grad = True
Done batch 1 with 128 indices ([12276, 11571, 14354, 2081, 11199]...) in 0.073 sec
Done batch 26 with 128 indices ([16171, 4864, 11497, 5763, 14921]...) in 0.069 sec
Done batch 51 with 128 indices ([5279, 10987, 14495, 8799, 10444]...) in 0.069 sec
Done batch 77 with 128 indices ([1295, 580, 3436, 14379, 8025]...) in 0.070 sec
Done batch 102 with 128 indices ([7139, 8685, 9444, 14863, 3410]...) in 0.068 sec
Done batch 128 with 128 indices ([3500, 3365, 9528, 2370, 991]...) in 0.069 sec
Apply ortho pmode constraint at iter 6, relative pmode power = [0.457 0.168 0.105 0.102 0.087 0.081], probe int sum = 469.1653
Apply fix probe int constraint at iter 6, probe int sum = 450.4553
Apply z-direction Gaussian blur with std = 1 px on obja at iter 6
Apply z-direction Gaussian blur with std = 1 px on objp at iter 6
Apply hard positivity constraint on objp at iter 6
Iter: 6, Total Loss: 0.2458, loss_single: 0.2446, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0011, loss_simlar: 0.0000, in 8.944 sec

Iter: 7, obja.requires_grad = True
Iter: 7, objp.requires_grad = True
Iter: 7, obj_tilts.requires_grad = False
Iter: 7, probe.requires_grad = True
Iter: 7, probe_pos_shifts.requires_grad = True
Done batch 1 with 128 indices ([11577, 7311, 4609, 7372, 13424]...) in 0.069 sec
Done batch 26 with 128 indices ([5009, 15187, 14102, 4111, 6536]...) in 0.071 sec
Done batch 51 with 128 indices ([16289, 11879, 2907, 4214, 4633]...) in 0.069 sec
Done batch 77 with 128 indices ([2912, 15771, 5064, 13788, 11023]...) in 0.068 sec
Done batch 102 with 128 indices ([12076, 5094, 2333, 8142, 8167]...) in 0.069 sec
Done batch 128 with 128 indices ([13946, 7467, 10574, 11098, 9125]...) in 0.069 sec
Apply ortho pmode constraint at iter 7, relative pmode power = [0.456 0.176 0.107 0.099 0.084 0.077], probe int sum = 462.8228
Apply fix probe int constraint at iter 7, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 7
Apply z-direction Gaussian blur with std = 1 px on objp at iter 7
Apply hard positivity constraint on objp at iter 7
Iter: 7, Total Loss: 0.2422, loss_single: 0.2411, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0011, loss_simlar: 0.0000, in 8.965 sec

Iter: 8, obja.requires_grad = True
Iter: 8, objp.requires_grad = True
Iter: 8, obj_tilts.requires_grad = False
Iter: 8, probe.requires_grad = True
Iter: 8, probe_pos_shifts.requires_grad = True
Done batch 1 with 128 indices ([8337, 15351, 2646, 13491, 15437]...) in 0.067 sec
Done batch 26 with 128 indices ([5651, 9024, 2401, 1170, 9521]...) in 0.068 sec
Done batch 51 with 128 indices ([5158, 10509, 8824, 8033, 9292]...) in 0.070 sec
Done batch 77 with 128 indices ([1694, 7984, 11293, 2272, 975]...) in 0.068 sec
Done batch 102 with 128 indices ([9665, 13757, 14676, 5892, 4618]...) in 0.068 sec
Done batch 128 with 128 indices ([12172, 8870, 15547, 9451, 15219]...) in 0.069 sec
Apply ortho pmode constraint at iter 8, relative pmode power = [0.456 0.182 0.108 0.096 0.083 0.076], probe int sum = 459.1636
Apply fix probe int constraint at iter 8, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 8
Apply z-direction Gaussian blur with std = 1 px on objp at iter 8
Apply hard positivity constraint on objp at iter 8
Iter: 8, Total Loss: 0.2399, loss_single: 0.2388, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0011, loss_simlar: 0.0000, in 12.605 sec

Iter: 9, obja.requires_grad = True
Iter: 9, objp.requires_grad = True
Iter: 9, obj_tilts.requires_grad = False
Iter: 9, probe.requires_grad = True
Iter: 9, probe_pos_shifts.requires_grad = True
Done batch 1 with 128 indices ([12511, 8987, 9535, 11561, 6174]...) in 0.072 sec
Done batch 26 with 128 indices ([1824, 9561, 2212, 4445, 5370]...) in 0.068 sec
Done batch 51 with 128 indices ([15546, 2256, 9651, 10753, 7218]...) in 0.069 sec
Done batch 77 with 128 indices ([1924, 5971, 10152, 10036, 10354]...) in 0.068 sec
Done batch 102 with 128 indices ([6475, 3778, 3360, 4427, 359]...) in 0.068 sec
Done batch 128 with 128 indices ([4589, 5140, 2496, 8186, 5064]...) in 0.070 sec
Apply ortho pmode constraint at iter 9, relative pmode power = [0.456 0.185 0.108 0.092 0.083 0.076], probe int sum = 457.7815
Apply fix probe int constraint at iter 9, probe int sum = 450.4553
Apply z-direction Gaussian blur with std = 1 px on obja at iter 9
Apply z-direction Gaussian blur with std = 1 px on objp at iter 9
Apply hard positivity constraint on objp at iter 9
Iter: 9, Total Loss: 0.2384, loss_single: 0.2373, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0011, loss_simlar: 0.0000, in 13.809 sec

Iter: 10, obja.requires_grad = True
Iter: 10, objp.requires_grad = True
Iter: 10, obj_tilts.requires_grad = False
Iter: 10, probe.requires_grad = True
Iter: 10, probe_pos_shifts.requires_grad = True
Done batch 1 with 128 indices ([3846, 8148, 5793, 4440, 13397]...) in 0.069 sec
Done batch 26 with 128 indices ([10710, 9601, 12594, 492, 11539]...) in 0.068 sec
Done batch 51 with 128 indices ([9150, 3434, 9400, 8197, 10439]...) in 0.068 sec
Done batch 77 with 128 indices ([13230, 12412, 16382, 8747, 3760]...) in 0.076 sec
Done batch 102 with 128 indices ([11344, 14419, 1878, 15444, 3669]...) in 0.070 sec
Done batch 128 with 128 indices ([14175, 13206, 11269, 1184, 4308]...) in 0.069 sec
Apply ortho pmode constraint at iter 10, relative pmode power = [0.454 0.186 0.108 0.09  0.083 0.079], probe int sum = 458.1985
Apply fix probe int constraint at iter 10, probe int sum = 450.4552
Apply z-direction Gaussian blur with std = 1 px on obja at iter 10
Apply z-direction Gaussian blur with std = 1 px on objp at iter 10
Apply hard positivity constraint on objp at iter 10
Iter: 10, Total Loss: 0.2375, loss_single: 0.2364, loss_poissn: 0.0000, loss_pacbed: 0.0000, loss_sparse: 0.0011, loss_simlar: 0.0000, in 8.980 sec

Saving summary figures for iter 10

### The PtyRADSolver is finished in 123.183 sec, or 2 min 3.183 sec ###
Mon Sep 23 23:26:10 EDT 2024
